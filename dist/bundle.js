!function(e){var n={};function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(o,r,function(n){return e[n]}.bind(null,r));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t(1);var o=t(6),r=t(7),i=function(){var e=this;o.getApi("https://demo.esitevr.com/iv.fortum.jarvenpaa/",{"ui.poi_panel.visible":!1}).then((function(n){e.ivApi=n,r.MyApp.initOverrides()}))};window.TestApp=new i},function(e,n,t){var o=t(2);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(4)(o,r);o.locals&&(e.exports=o.locals)},function(e,n,t){(e.exports=t(3)(!0)).push([e.i,'indoorviewer{height:100vh}html,body{height:100%;width:100%;margin:0;padding:0;font-family:\'Nunito\', sans-serif;font-weight:300}.routerContainer{z-index:999;position:fixed;top:0;left:0;width:100%;height:100%;display:none;align-items:center;justify-content:center}.routerContainer .backDrop{z-index:9999;display:none;top:0;left:0;width:100%;height:100%;position:fixed;background-color:rgba(0,0,0,0.4)}.routerContainer .modalPumpContent{display:flex;flex-direction:row;width:100%;height:100%}.routerContainer .modalPumpContent .modalPumpMeter{display:flex;align-items:center;width:45%;height:100%}.routerContainer .modalPumpContent .modalPumpMeter .pumpMeterContainer{display:flex;flex-direction:column-reverse;width:7rem;height:calc(100% - 6rem);margin:0 0 0 3rem;padding:0.75rem;background-color:#e8e8e8;border-radius:3px}.routerContainer .modalPumpContent .modalPumpMeter .pumpMeterContainer .pumpMeterLevel{display:flex;justify-content:center;width:100%;height:50%;background-color:orange;border-radius:0 0 3px 3px;transition-duration:300ms}.routerContainer .modalPumpContent .modalPumpMeter .pumpMeterContainer .pumpMeterLevelCurrent{font-size:2rem;margin:0;padding:0;transform:translateY(-2.5rem);z-index:99999}.routerContainer .modalPumpContent .modalPumpMeter .pumpMeterContainer .pumpMeterFillLevel{display:flex;justify-content:center;width:100%;height:0;opacity:0.35;transition-duration:300ms}.routerContainer .modalPumpContent .pumpMeterCapacity{position:absolute;top:9.1rem;left:3.1rem;font-size:2rem;display:block;margin:0;padding:0}.routerContainer .modalPumpContent .pumpMeterLevelMax{margin:0;padding:0;display:block;position:absolute;top:12rem;left:9.66rem;font-size:2rem}.routerContainer .modalPumpContent .pumpMeterLevelMid{margin:0;padding:0;display:block;position:absolute;top:35rem;left:9.66rem;font-size:2rem}.routerContainer .modalPumpContent .pumpMeterLevelMin{margin:0;padding:0;display:block;position:absolute;top:58rem;left:9.66rem;font-size:2rem}.routerContainer .modalPumpContent .modalPumpControls{display:flex;flex-direction:column;justify-content:space-between;padding:0 3rem 3rem 0;width:55%;height:100%}.routerContainer .modalPumpContent .modalPumpControlRatios{display:flex;flex-direction:column;margin:1.5rem 0 0 0;padding:1rem;border:1px solid rgba(0,0,0,0.3);border-radius:3px}.routerContainer .modalPumpContent .pumpRatioTitle{margin:auto;padding:0;font-size:2.5rem}.routerContainer .modalPumpContent .pumpRatioFosf,.routerContainer .modalPumpContent .pumpRatioLipea,.routerContainer .modalPumpContent .pumpRatioVesi{margin:1rem 0 0 0;padding:0;font-size:1.8rem}.routerContainer .modalPumpContent .modalPumpControlButtons .btnC{font-size:80%}.routerContainer .modal{display:flex;flex-direction:column;position:relative;height:100%;width:100%;overflow:hidden;background-color:white;border-radius:3px;box-shadow:0 0 21px -10px rgba(0,0,0,0.75)}.routerContainer .modal .modalHeader{flex:0 1;padding:1rem 0 1rem 0;display:flex;flex-direction:column;align-items:center}.routerContainer .modal .modalHeader .modalTitle{margin:0 0 0 0;padding:0 0 0 0;color:#353535}.routerContainer .modal .modalHeader .modalSubTitle{margin:0 0 0.5rem 0;padding:0;color:#353535}.routerContainer .modal .modalHeader .divider{margin:0;padding:0;height:1px !important;width:calc(100% - 6rem);background-color:rgba(0,0,0,0.3)}.routerContainer .modal .modalContent{flex:1 0;display:flex;flex-direction:column;align-items:center;padding:0 3rem 0 3rem;width:100%}.routerContainer .modal .modalContent .modalContentItem{display:flex;flex-direction:row;justify-content:space-between;align-content:center;width:100%;margin:0;padding:0}.routerContainer .modal .modalContent .accordion{padding:1rem 0 1rem 0}.routerContainer .modal .modalContent .accordion .accordionTitle{margin:0;padding:0;font-family:\'Nunito\', sans-serif;font-size:2rem;color:#353535}.routerContainer .modal .modalContent .accordion .accordionOpener{margin:0;padding:0;color:#353535;transform:translateY(0.5rem)}.routerContainer .modal .btnC{display:flex;justify-content:center;width:100%;margin:1rem 0 0 0;padding:0.75rem 0 0.75rem 0;border-radius:3px}.routerContainer .modal .btnBlue{background-color:#25b7d3;color:white}.routerContainer .modal .btnRed{background-color:#ee403f;color:white;margin-right:1rem}.routerContainer .modal .btnGreen{background-color:#19d15c;color:white}.routerContainer .modal .btnTitle{margin:0;padding:0;font-family:\'Nunito\', sans-serif;font-size:3rem;font-weight:300;transform:translateY(0.2rem)}.routerContainer .modal .modalFooter{flex:0 1;display:flex;flex-direction:row;margin:0;padding:0 3rem 3rem 3rem}header{text-align:center;border-bottom:0.1em solid rgba(34,186,211,0.5)}.align-left{float:left !important}#eq-name{font-size:2em;line-height:0.8em;display:inline-block}.v{display:inline-block}.btn.btn-success{color:#707070 !important;background-color:#ffffff;background-image:linear-gradient(to bottom, #fff, #fff);border-color:#ffffff #ffffff #ffffff}.btn.btn-success:hover{color:#707070;background-color:#ffffff;background-image:linear-gradient(to bottom, #fff, #fff);border-color:#ffffff #ffffff #ffffff}.pumpCloseButton{position:absolute;top:3rem;left:1.5rem;transform:scale(2)}.historyCloseButton{position:absolute;top:3rem;left:1.2rem;transform:scale(2)}.textCloseButton{position:absolute;top:3rem;left:1.2rem;transform:scale(2)}.kks{font-size:initial;text-align:inherit}.routerItem{display:none;height:640px;width:360px;z-index:99999}.pumpContainer{display:grid;grid-template-columns:35% auto;grid-template-rows:4em 0.5em 25% auto 40%;grid-template-areas:"header header" ". ." "meter recipe" "meter ." "meter btns";grid-column-gap:0.5em;grid-row-gap:0.5em;padding:0.4em;height:100%;width:100%;top:2rem;left:2rem;border-radius:3px;box-shadow:0 0 21px -10px rgba(0,0,0,0.75);background-color:white}.head{grid-area:header;padding:0.3em}.meter{grid-area:meter;padding:0.3em;border:0.1em solid #707070}.recipe{grid-area:recipe;padding:0.3em;border:0.1em solid rgba(34,186,211,0.5)}#suhde{text-align:center}.btns{grid-area:btns;padding:0.3em;grid-template-columns:auto;grid-template-rows:1fr 1fr 1fr;grid-template-areas:"kaavio" "taytto" "historia";display:grid}.kaavio{grid-area:kaavio;text-align:center}.taytto{grid-area:taytto;text-align:center}.historia{grid-area:historia;text-align:center}.btn-primary{background-color:#22BAD3;border-color:#22BAD3;width:10em;height:4em;margin:0.2em}.descdroparrow{display:inline-block;margin:0.5em;line-height:2em !important}.accordion{background-color:#fff;color:#444;cursor:pointer;padding:18px;width:100%;text-align:left;border:none;outline:none;transition:0.4s}.panel{padding:0 18px;background-color:white;max-height:0;overflow:hidden;transition:max-height 0.2s ease-out;background-color:#ebebeb;width:100%}.routerHistory .modal{overflow:auto}.modal::-webkit-scrollbar{display:none}a.button{padding:0.5em;text-decoration:none;color:initial;cursor:pointer}.historycontainer{margin-top:0.5em;margin-bottom:0.5em;padding:0.3em}.maintdate{font-size:0.9em}.mainttitle{font-size:1.1em}.maintdesc{overflow:hidden}.align-left{float:left !important}.align-right{float:right !important}.modalPi{display:none;position:fixed;z-index:1;padding-top:100px;left:0;top:0;width:100%;height:100%;overflow:auto;background-color:#000;background-color:rgba(0,0,0,0.9)}.modalPiContent{margin:auto;display:block;width:80%;max-width:700px;animation-name:zoom;animation-duration:0.6s}@keyframes zoom{from{transform:scale(0)}to{transform:scale(1)}}.closePi{position:absolute;top:15px;right:35px;color:#f1f1f1;font-size:40px;font-weight:bold;transition:0.3s}.closePi:hover,.closePi:focus{color:#bbb;text-decoration:none;cursor:pointer}.text{text-align:center}.modalTu{display:none;position:fixed;z-index:1;padding-top:100px;left:0;top:0;width:100%;height:100%;overflow:auto;background-color:#000;background-color:rgba(0,0,0,0.9)}.modalTuContent{margin:auto;display:block;width:80%;max-width:700px;animation-name:zoom;animation-duration:0.6s}.closeTu{position:absolute;top:15px;right:35px;color:#f1f1f1;font-size:40px;font-weight:bold;transition:0.3s}.closeTu:hover,.closeTu:focus{color:#bbb;text-decoration:none;cursor:pointer}\n',"",{version:3,sources:["/home/tatu/maintenance/src/src/index.scss"],names:[],mappings:"AAAA,aACE,YAAa,CACd,UAaC,YACA,WAEA,SACA,UAIA,iCACA,eAAgB,CACjB,iBAGC,YAEA,eAEA,MACA,OAEA,WACA,YAEA,aACA,mBACA,sBAAuB,CAbzB,2BAgBI,aAEA,aAEA,MACA,OAEA,WACA,YAEA,eAEA,gCAAoC,CA5BxC,mCAgCI,aACA,mBAEA,WACA,WAAY,CApChB,mDAuCM,aACA,mBAEA,UACA,WAAY,CA3ClB,uEA8CQ,aACA,8BACA,WACA,yBAEA,kBACA,gBAEA,yBAEA,iBAAkB,CAxD1B,uFA2DU,aACA,uBACA,WACA,WAEA,wBACA,0BAEA,yBAA0B,CAnEpC,8FAwEU,eAEA,SACA,UAEA,8BAEA,aAAc,CA/ExB,2FAmFU,aACA,uBACA,WACA,SAEA,aAEA,yBAA0B,CA1FpC,sDAgGM,kBACA,WACA,YACA,eACA,cACA,SACA,SAAU,CAtGhB,sDA0GM,SACA,UACA,cACA,kBACA,UACA,aACA,cAAe,CAhHrB,sDAqHM,SACA,UACA,cACA,kBACA,UACA,aACA,cAAe,CA3HrB,sDAgIM,SACA,UACA,cACA,kBACA,UACA,aACA,cAAe,CAtIrB,sDA0IM,aACA,sBAEA,8BAEA,sBAEA,UACA,WAAY,CAlJlB,2DAyJM,aACA,sBAEA,oBACA,aACA,iCACA,iBAAkB,CA/JxB,mDAqKM,YACA,UACA,gBAAiB,CAvKvB,uJA4KM,kBACA,UACA,gBAAiB,CA9KvB,kEAiLM,aAAc,CAjLpB,wBAsLI,aACA,sBAEA,kBAEA,YACA,WAEA,gBACA,uBAEA,kBACA,0CAA8C,CAlMlD,qCAqMM,SAEA,sBAEA,aACA,sBACA,kBAAmB,CA3MzB,iDA8MQ,eACA,gBAEA,aAAc,CAjNtB,oDAoNQ,oBACA,UAEA,aAAc,CAvNtB,8CA0NQ,SACA,UAEA,sBACA,wBAGA,gCAAoC,CAjO5C,sCAqOM,SAEA,aACA,sBACA,mBAEA,sBAEA,UAAW,CA7OjB,wDAgPQ,aACA,mBACA,8BACA,qBAEA,WAEA,SACA,SAAU,CAxPlB,iDA2PQ,qBAAsB,CA3P9B,iEA8PU,SACA,UAEA,iCACA,eAEA,aAAc,CApQxB,kEAuQU,SACA,UAEA,cAEA,4BAA6B,CA5QvC,8BAkRM,aAEA,uBAEA,WAEA,kBACA,4BAEA,iBAAkB,CA3RxB,iCA8RM,yBACA,WAAY,CA/RlB,gCAkSM,yBACA,YAEA,iBAAkB,CArSxB,kCAySM,yBACA,WAAY,CA1SlB,kCA6SM,SACA,UAEA,iCACA,eACA,gBAEA,4BAA6B,CApTnC,qCAyTM,SAEA,aACA,mBAEA,SACA,wBAAyB,CAE1B,OAMH,kBACA,8CAAiD,CAClD,YAGC,qBAAsB,CACvB,SAGC,cACA,kBACA,oBAAqB,CACtB,GAGC,oBAAqB,CACtB,iBAGC,yBACA,yBACA,wDACA,oCAAqC,CACtC,uBAGC,cACA,yBACA,wDACA,oCAAqC,CACtC,iBAGC,kBACA,SACA,YAEA,kBAAmB,CACpB,oBAGC,kBACA,SACA,YAEA,kBAAmB,CACpB,iBAGC,kBACA,SACA,YAEA,kBAAmB,CACpB,KAGC,kBACA,kBAAmB,CACpB,YAGC,aAEA,aACA,YAEA,aAAc,CACf,eAIC,aACA,+BACA,0CACA,gFACA,sBACA,mBACA,cACA,YACA,WACA,SACA,UACA,kBACA,2CACA,sBAAuB,CACxB,MAGC,iBACA,aAAc,CACf,OAGC,gBACA,cACA,0BAA2B,CAC5B,QAGC,iBACA,cACA,uCAA2C,CAC5C,OAGC,iBAAkB,CACnB,MAIC,eACA,cACA,2BACA,+BACA,iDACA,YAAa,CACd,QAGC,iBACA,iBAAkB,CACnB,QAGC,iBACA,iBAAkB,CACnB,UAGC,mBACA,iBAAkB,CACnB,aAIC,yBACA,qBACA,WACA,WACA,YACF,CAAC,eAIC,qBACA,aACA,0BAA2B,CAC5B,WAGC,sBACA,WACA,eACA,aACA,WACA,gBACA,YACA,aACA,eAAgB,CACjB,OAGC,eACA,uBACA,aACA,gBACA,oCACA,yBAEA,UAAW,CACZ,sBAGC,aAAc,CACf,0BAGC,YAAa,CACd,SAKC,cACA,qBACA,cACA,cAAc,CACf,kBAGC,iBACA,oBACA,aAAc,CAGf,WAGC,eAAgB,CACjB,YAGC,eAAgB,CACjB,WAGC,eAAgB,CACjB,YAGC,qBAAsB,CACvB,aAGC,sBAAuB,CACxB,SAIC,aACA,eACA,UACA,kBACA,OACA,MACA,WACA,YACA,cACA,sBACA,gCAAiC,CAClC,gBAGC,YACA,cACA,UACA,gBACA,oBACA,uBAAwB,CACzB,gBAGC,KAAM,kBAAkB,CACxB,GAAI,kBAAkB,CAAA,CAGxB,SACE,kBACA,SACA,WACA,cACA,eACA,iBACA,eAAgB,CACjB,8BAIC,WACA,qBACA,cAAe,CAChB,MAGC,iBAAkB,CACnB,SAGC,aACA,eACA,UACA,kBACA,OACA,MACA,WACA,YACA,cACA,sBACA,gCAAiC,CAClC,gBAGC,YACA,cACA,UACA,gBACA,oBACA,uBAAwB,CACzB,SAGC,kBACA,SACA,WACA,cACA,eACA,iBACA,eAAgB,CACjB,8BAIC,WACA,qBACA,cAAe,CAChB",file:"index.scss",sourcesContent:['indoorviewer {\n  height: 100vh;\n}\n\n/*#myPOIViewer {\n\tposition: absolute;\n\ttop: 460px;\n\tleft: 500px;\n\twidth: 350px;\n\tz-index: 1000;\n\tdisplay: none;\n\tbackground-color: #ee0;\n}*/\n\nhtml, body {\n  height: 100%;\n  width: 100%;\n\n  margin: 0;\n  padding: 0;\n\n  /* background-color: #25b7d3; */\n\n  font-family: \'Nunito\', sans-serif;\n  font-weight: 300;\n}\n\n.routerContainer {\n  z-index: 999;\n\n  position: fixed;\n\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  display: none;\n  align-items: center;\n  justify-content: center;\n\n  .backDrop {\n    z-index: 9999;\n\n    display: none;\n\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n\n    background-color: rgba(0, 0, 0, 0.4);\n  }\n\n  .modalPumpContent {\n    display: flex;\n    flex-direction: row;\n\n    width: 100%;\n    height: 100%;\n\n    .modalPumpMeter {\n      display: flex;\n      align-items: center;\n\n      width: 45%;\n      height: 100%;\n\n      .pumpMeterContainer {\n        display: flex;\n        flex-direction: column-reverse;\n        width: 7rem;\n        height: calc(100% - 6rem);\n\n        margin: 0 0 0 3rem;\n        padding: 0.75rem;\n\n        background-color: #e8e8e8;\n\n        border-radius: 3px;\n\n        .pumpMeterLevel {\n          display: flex;\n          justify-content: center;\n          width: 100%;\n          height: 50%;\n\n          background-color: orange;\n          border-radius: 0 0 3px 3px;\n\n          transition-duration: 300ms;\n\n        }\n\n        .pumpMeterLevelCurrent {\n          font-size: 2rem;\n\n          margin: 0;\n          padding: 0;\n\n          transform: translateY(-2.5rem);\n\n          z-index: 99999;\n        }\n\n        .pumpMeterFillLevel {\n          display: flex;\n          justify-content: center;\n          width: 100%;\n          height: 0;\n\n          opacity: 0.35;\n\n          transition-duration: 300ms;\n        }\n      }\n    }\n\n    .pumpMeterCapacity {\n      position: absolute;\n      top: 9.1rem;\n      left: 3.1rem;\n      font-size: 2rem;\n      display: block;\n      margin: 0;\n      padding: 0;\n    }\n\n    .pumpMeterLevelMax {\n      margin: 0;\n      padding: 0;\n      display: block;\n      position: absolute;\n      top: 12rem;\n      left: 9.66rem;\n      font-size: 2rem;\n\n    }\n\n    .pumpMeterLevelMid {\n      margin: 0;\n      padding: 0;\n      display: block;\n      position: absolute;\n      top: 35rem;\n      left: 9.66rem;\n      font-size: 2rem;\n\n    }\n\n    .pumpMeterLevelMin {\n      margin: 0;\n      padding: 0;\n      display: block;\n      position: absolute;\n      top: 58rem;\n      left: 9.66rem;\n      font-size: 2rem;\n    }\n\n    .modalPumpControls {\n      display: flex;\n      flex-direction: column;\n\n      justify-content: space-between;\n\n      padding: 0 3rem 3rem 0;\n\n      width: 55%;\n      height: 100%;\n\n\n\n    }\n\n    .modalPumpControlRatios {\n      display: flex;\n      flex-direction: column;\n\n      margin: 1.5rem 0 0 0;\n      padding: 1rem;\n      border: 1px solid rgba(0, 0, 0, 0.3);\n      border-radius: 3px;\n\n\n    }\n\n    .pumpRatioTitle {\n      margin: auto;\n      padding: 0;\n      font-size: 2.5rem;\n\n    }\n\n    .pumpRatioFosf, .pumpRatioLipea, .pumpRatioVesi {\n      margin: 1rem 0 0 0;\n      padding: 0;\n      font-size: 1.8rem;\n    }\n    .modalPumpControlButtons .btnC {\n      font-size: 80%;\n    }\n  }\n\n  .modal {\n    display: flex;\n    flex-direction: column;\n\n    position: relative;\n\n    height: 100%;\n    width: 100%;\n\n    overflow: hidden;\n    background-color: white;\n\n    border-radius: 3px;\n    box-shadow: 0 0 21px -10px rgba(0, 0, 0, 0.75);\n\n    .modalHeader {\n      flex: 0 1;\n\n      padding: 1rem 0 1rem 0;\n\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n\n      .modalTitle {\n        margin: 0 0 0 0;\n        padding: 0 0 0 0;\n\n        color: #353535;\n      }\n      .modalSubTitle {\n        margin: 0 0 0.5rem 0;\n        padding: 0;\n\n        color: #353535;\n      }\n      .divider {\n        margin: 0;\n        padding: 0;\n\n        height: 1px !important;\n        width: calc(100% - 6rem);\n\n\n        background-color: rgba(0, 0, 0, 0.3);\n      }\n    }\n    .modalContent {\n      flex: 1 0;\n\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n\n      padding: 0 3rem 0 3rem;\n\n      width: 100%;\n\n      .modalContentItem {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-content: center;\n\n        width: 100%;\n\n        margin: 0;\n        padding: 0;\n      }\n      .accordion {\n        padding: 1rem 0 1rem 0;\n\n        .accordionTitle {\n          margin: 0;\n          padding: 0;\n\n          font-family: \'Nunito\', sans-serif;\n          font-size: 2rem;\n\n          color: #353535;\n        }\n        .accordionOpener {\n          margin: 0;\n          padding: 0;\n\n          color: #353535;\n\n          transform: translateY(0.5rem);\n        }\n      }\n    }\n\n    .btnC {\n      display: flex;\n\n      justify-content: center;\n\n      width: 100%;\n\n      margin: 1rem 0 0 0;\n      padding: 0.75rem 0 0.75rem 0;\n\n      border-radius: 3px;\n    }\n    .btnBlue {\n      background-color: #25b7d3;\n      color: white;\n    }\n    .btnRed {\n      background-color: #ee403f;\n      color: white;\n\n      margin-right: 1rem;\n\n    }\n    .btnGreen {\n      background-color: #19d15c;\n      color: white;\n    }\n    .btnTitle {\n      margin: 0;\n      padding: 0;\n\n      font-family: \'Nunito\', sans-serif;\n      font-size: 3rem;\n      font-weight: 300;\n\n      transform: translateY(0.2rem);\n\n    }\n\n    .modalFooter {\n      flex: 0 1;\n\n      display: flex;\n      flex-direction: row;\n\n      margin: 0;\n      padding: 0 3rem 3rem 3rem;\n\n    }\n  }\n\n}\n\nheader {\n  text-align: center;\n  border-bottom: .1em solid rgba(34, 186, 211, 0.5);\n}\n\n.align-left {\n  float: left !important;\n}\n\n#eq-name {\n  font-size: 2em;\n  line-height: 0.8em;\n  display: inline-block;\n}\n\n.v {\n  display: inline-block;\n}\n\n.btn.btn-success {\n  color: #707070 !important;\n  background-color: #ffffff;\n  background-image: linear-gradient(to bottom, #ffffff, #ffffff);\n  border-color: #ffffff #ffffff #ffffff;\n}\n\n.btn.btn-success:hover {\n  color: #707070;\n  background-color: #ffffff;\n  background-image: linear-gradient(to bottom, #ffffff, #ffffff);\n  border-color: #ffffff #ffffff #ffffff;\n}\n\n.pumpCloseButton {\n  position: absolute;\n  top: 3rem;\n  left: 1.5rem;\n\n  transform: scale(2);\n}\n\n.historyCloseButton {\n  position: absolute;\n  top: 3rem;\n  left: 1.2rem;\n\n  transform: scale(2);\n}\n\n.textCloseButton {\n  position: absolute;\n  top: 3rem;\n  left: 1.2rem;\n\n  transform: scale(2);\n}\n\n.kks {\n  font-size: initial;\n  text-align: inherit;\n}\n\n.routerItem {\n  display: none;\n\n  height: 640px;\n  width: 360px;\n\n  z-index: 99999;\n}\n\n/*MAIN LAYOUT GRID*/\n.pumpContainer {\n  display: grid;\n  grid-template-columns: 35% auto;\n  grid-template-rows: 4em 0.5em 25% auto 40%;\n  grid-template-areas: "header header" ". ." "meter recipe" "meter ." "meter btns";\n  grid-column-gap: 0.5em;\n  grid-row-gap: 0.5em;\n  padding: 0.4em;\n  height: 100%;\n  width: 100%; /*stretch to the full width and height of the device.*/\n  top: 2rem;\n  left: 2rem;\n  border-radius: 3px;\n  box-shadow: 0 0 21px -10px rgba(0, 0, 0, 0.75);\n  background-color: white;\n}\n\n.head {\n  grid-area: header;\n  padding: 0.3em;\n}\n\n.meter {\n  grid-area: meter;\n  padding: 0.3em;\n  border: 0.1em solid #707070;\n}\n\n.recipe {\n  grid-area: recipe;\n  padding: 0.3em;\n  border: 0.1em solid rgba(34, 186, 211, 0.5);\n}\n\n#suhde {\n  text-align: center;\n}\n\n/*BUTTON NESTED GRID & BUTTON AREA (MAIN LAYOUT GRID)*/\n.btns {\n  grid-area: btns;\n  padding: 0.3em;\n  grid-template-columns: auto;\n  grid-template-rows: 1fr 1fr 1fr;\n  grid-template-areas: "kaavio" "taytto" "historia";\n  display: grid;\n}\n\n.kaavio {\n  grid-area: kaavio;\n  text-align: center;\n}\n\n.taytto {\n  grid-area: taytto;\n  text-align: center;\n}\n\n.historia {\n  grid-area: historia;\n  text-align: center;\n}\n\n/*BUTTON*/\n.btn-primary {\n  background-color: #22BAD3;\n  border-color: #22BAD3;\n  width: 10em;\n  height: 4em;\n  margin: 0.2em\n}\n\n/*Maintenance entries & descriptions*/\n.descdroparrow{\n  display: inline-block;\n  margin: 0.5em;\n  line-height: 2em !important;\n}\n\n.accordion {\n  background-color: #fff;\n  color: #444;\n  cursor: pointer;\n  padding: 18px;\n  width: 100%;\n  text-align: left;\n  border: none;\n  outline: none;\n  transition: 0.4s;\n}\n\n.panel {\n  padding: 0 18px;\n  background-color: white;\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.2s ease-out;\n  background-color: #ebebeb;\n\n  width: 100%;\n}\n\n.routerHistory .modal {\n  overflow: auto;\n}\n\n.modal::-webkit-scrollbar {\n  display: none;\n}\n\n\n\na.button {\n  padding: 0.5em;\n  text-decoration: none;\n  color: initial;\n  cursor:pointer;\n}\n\n.historycontainer{\n  margin-top: 0.5em;\n  margin-bottom: 0.5em;\n  padding: 0.3em;\n\n\n}\n\n.maintdate{\n  font-size: 0.9em;\n}\n\n.mainttitle{\n  font-size: 1.1em;\n}\n\n.maintdesc{\n  overflow: hidden;\n}\n\n.align-left {\n  float: left !important;\n}\n\n.align-right {\n  float: right !important;\n}\n\n\n.modalPi {\n  display: none; /* Hidden by default */\n  position: fixed; /* Stay in place */\n  z-index: 1; /* Sit on top */\n  padding-top: 100px; /* Location of the box */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0,0,0); /* Fallback color */\n  background-color: rgba(0,0,0,0.9); /* Black w/ opacity */\n}\n\n.modalPiContent {\n  margin: auto;\n  display: block;\n  width: 80%;\n  max-width: 700px;\n  animation-name: zoom;\n  animation-duration: 0.6s;\n}\n\n@keyframes zoom {\n  from {transform:scale(0)}\n  to {transform:scale(1)}\n}\n\n.closePi {\n  position: absolute;\n  top: 15px;\n  right: 35px;\n  color: #f1f1f1;\n  font-size: 40px;\n  font-weight: bold;\n  transition: 0.3s;\n}\n\n.closePi:hover,\n.closePi:focus {\n  color: #bbb;\n  text-decoration: none;\n  cursor: pointer;\n}\n\n.text {\n  text-align: center;\n}\n\n.modalTu {\n  display: none; /* Hidden by default */\n  position: fixed; /* Stay in place */\n  z-index: 1; /* Sit on top */\n  padding-top: 100px; /* Location of the box */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0,0,0); /* Fallback color */\n  background-color: rgba(0,0,0,0.9); /* Black w/ opacity */\n}\n\n.modalTuContent {\n  margin: auto;\n  display: block;\n  width: 80%;\n  max-width: 700px;\n  animation-name: zoom;\n  animation-duration: 0.6s;\n}\n\n.closeTu {\n  position: absolute;\n  top: 15px;\n  right: 35px;\n  color: #f1f1f1;\n  font-size: 40px;\n  font-weight: bold;\n  transition: 0.3s;\n}\n\n.closeTu:hover,\n.closeTu:focus {\n  color: #bbb;\n  text-decoration: none;\n  cursor: pointer;\n}'],sourceRoot:""}])},function(e,n){e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=function(e,n){var t=e[1]||"",o=e[3];if(!o)return t;if(n&&"function"==typeof btoa){var r=(a=o,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),i=o.sources.map((function(e){return"/*# sourceURL="+o.sourceRoot+e+" */"}));return[t].concat(i).concat([r]).join("\n")}var a;return[t].join("\n")}(n,e);return n[2]?"@media "+n[2]+"{"+t+"}":t})).join("")},n.i=function(e,t){"string"==typeof e&&(e=[[null,e,""]]);for(var o={},r=0;r<this.length;r++){var i=this[r][0];"number"==typeof i&&(o[i]=!0)}for(r=0;r<e.length;r++){var a=e[r];"number"==typeof a[0]&&o[a[0]]||(t&&!a[2]?a[2]=t:t&&(a[2]="("+a[2]+") and ("+t+")"),n.push(a))}},n}},function(e,n,t){var o,r,i={},a=(o=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===r&&(r=o.apply(this,arguments)),r}),l=function(e,n){return n?n.querySelector(e):document.querySelector(e)},s=function(e){var n={};return function(e,t){if("function"==typeof e)return e();if(void 0===n[e]){var o=l.call(this,e,t);if(window.HTMLIFrameElement&&o instanceof window.HTMLIFrameElement)try{o=o.contentDocument.head}catch(e){o=null}n[e]=o}return n[e]}}(),u=null,c=0,A=[],d=t(5);function p(e,n){for(var t=0;t<e.length;t++){var o=e[t],r=i[o.id];if(r){r.refs++;for(var a=0;a<r.parts.length;a++)r.parts[a](o.parts[a]);for(;a<o.parts.length;a++)r.parts.push(y(o.parts[a],n))}else{var l=[];for(a=0;a<o.parts.length;a++)l.push(y(o.parts[a],n));i[o.id]={id:o.id,refs:1,parts:l}}}}function f(e,n){for(var t=[],o={},r=0;r<e.length;r++){var i=e[r],a=n.base?i[0]+n.base:i[0],l={css:i[1],media:i[2],sourceMap:i[3]};o[a]?o[a].parts.push(l):t.push(o[a]={id:a,parts:[l]})}return t}function m(e,n){var t=s(e.insertInto);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var o=A[A.length-1];if("top"===e.insertAt)o?o.nextSibling?t.insertBefore(n,o.nextSibling):t.appendChild(n):t.insertBefore(n,t.firstChild),A.push(n);else if("bottom"===e.insertAt)t.appendChild(n);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var r=s(e.insertAt.before,t);t.insertBefore(n,r)}}function h(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var n=A.indexOf(e);n>=0&&A.splice(n,1)}function C(e){var n=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var o=function(){0;return t.nc}();o&&(e.attrs.nonce=o)}return g(n,e.attrs),m(e,n),n}function g(e,n){Object.keys(n).forEach((function(t){e.setAttribute(t,n[t])}))}function y(e,n){var t,o,r,i;if(n.transform&&e.css){if(!(i="function"==typeof n.transform?n.transform(e.css):n.transform.default(e.css)))return function(){};e.css=i}if(n.singleton){var a=c++;t=u||(u=C(n)),o=B.bind(null,t,a,!1),r=B.bind(null,t,a,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(t=function(e){var n=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",g(n,e.attrs),m(e,n),n}(n),o=S.bind(null,t,n),r=function(){h(t),t.href&&URL.revokeObjectURL(t.href)}):(t=C(n),o=E.bind(null,t),r=function(){h(t)});return o(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;o(e=n)}else r()}}e.exports=function(e,n){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(n=n||{}).attrs="object"==typeof n.attrs?n.attrs:{},n.singleton||"boolean"==typeof n.singleton||(n.singleton=a()),n.insertInto||(n.insertInto="head"),n.insertAt||(n.insertAt="bottom");var t=f(e,n);return p(t,n),function(e){for(var o=[],r=0;r<t.length;r++){var a=t[r];(l=i[a.id]).refs--,o.push(l)}e&&p(f(e,n),n);for(r=0;r<o.length;r++){var l;if(0===(l=o[r]).refs){for(var s=0;s<l.parts.length;s++)l.parts[s]();delete i[l.id]}}}};var b,v=(b=[],function(e,n){return b[e]=n,b.filter(Boolean).join("\n")});function B(e,n,t,o){var r=t?"":o.css;if(e.styleSheet)e.styleSheet.cssText=v(n,r);else{var i=document.createTextNode(r),a=e.childNodes;a[n]&&e.removeChild(a[n]),a.length?e.insertBefore(i,a[n]):e.appendChild(i)}}function E(e,n){var t=n.css,o=n.media;if(o&&e.setAttribute("media",o),e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}function S(e,n,t){var o=t.css,r=t.sourceMap,i=void 0===n.convertToAbsoluteUrls&&r;(n.convertToAbsoluteUrls||i)&&(o=d(o)),r&&(o+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */");var a=new Blob([o],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(a),l&&URL.revokeObjectURL(l)}},function(e,n){e.exports=function(e){var n="undefined"!=typeof window&&window.location;if(!n)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var t=n.protocol+"//"+n.host,o=t+n.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,(function(e,n){var r,i=n.trim().replace(/^"(.*)"$/,(function(e,n){return n})).replace(/^'(.*)'$/,(function(e,n){return n}));return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?e:(r=0===i.indexOf("//")?i:0===i.indexOf("/")?t+i:o+i.replace(/^\.\//,""),"url("+JSON.stringify(r)+")")}))}},function(e,n,t){window,e.exports=function(e){var n={};function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}return t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(o,r,function(n){return e[n]}.bind(null,r));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=1)}([function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){e.ID="ID",e.IMPORTANCE="IMPORTANCE"}(n.PoiSortableField||(n.PoiSortableField={})),function(e){e.ASCENDING="ASC",e.DESCENDING="DESC"}(n.SortOrder||(n.SortOrder={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t(2).polyfill();var o=t(5);n.CustomLayer=o.CustomLayer;var r=t(8);n.SiteModelType=r.SiteModelType;var i=t(0);n.PoiSortableField=i.PoiSortableField;var a=t(0);n.SortOrder=a.SortOrder;var l=t(9);n.LicenseFeatureType=l.LicenseFeatureType;var s=t(10);n.PoiClickOrigin=s.PoiClickOrigin;var u=t(11);n.BlendingMode=u.BlendingMode;var c=t(12);n.UiLanguage=c.UiLanguage,n.DataLanguage=c.DataLanguage,n.DecimalSeparators=c.DecimalSeparators;var A=t(13);n.InstructionType=A.InstructionType;var d=t(14);n.ViewType=d.ViewType,n.getApi=function(e,n){if(void 0===n&&(n={}),n.hasOwnProperty("base_url"))throw Error("'base_url' configuration property is unnecessary when using getApi(). Please remove.");if(n.hasOwnProperty("onLoadComplete"))throw Error("'onLoadComplete' configuration property is unnecessary when using getApi(). Please use Promise.then() instead.");return new Promise((function(t,o){var r=document.createElement("script");r.src=e+("/"===e.slice(-1)?"":"/")+"IndoorViewerAPI.js",r.onerror=function(e){console.error("Fetching "+r.src+" failed.",e),o(e)},r.onload=function(){window.IV.loaded((function(){n=Object.assign(n,{base_url:e,onLoadComplete:function(){window.IV.injector.get("LicenseService").initialized.then((function(){var e=window.IV.injector.get("ApiService");t(e)})).catch((function(e){console.error("Loading the IndoorViewer API failed.",e),o(e)}))}}),new window.IndoorViewer(n)}))},document.head.appendChild(r)}))}},function(e,n,t){(function(n,t){
/*!
 * @overview es6-promise - a tiny implementation of Promises/A+.
 * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
 * @license   Licensed under MIT license
 *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
 * @version   v4.2.6+9869a4bc
 */
var o;o=function(){"use strict";function e(e){return"function"==typeof e}var o=Array.isArray?Array.isArray:function(e){return"[object Array]"===Object.prototype.toString.call(e)},r=0,i=void 0,a=void 0,l=function(e,n){f[r]=e,f[r+1]=n,2===(r+=2)&&(a?a(m):b())},s="undefined"!=typeof window?window:void 0,u=s||{},c=u.MutationObserver||u.WebKitMutationObserver,A="undefined"==typeof self&&void 0!==n&&"[object process]"==={}.toString.call(n),d="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel;function p(){var e=setTimeout;return function(){return e(m,1)}}var f=new Array(1e3);function m(){for(var e=0;e<r;e+=2)(0,f[e])(f[e+1]),f[e]=void 0,f[e+1]=void 0;r=0}var h,C,g,y,b=void 0;function v(e,n){var t=this,o=new this.constructor(S);void 0===o[E]&&H(o);var r=t._state;if(r){var i=arguments[r-1];l((function(){return P(r,o,i,t._result)}))}else R(t,o,e,n);return o}function B(e){if(e&&"object"==typeof e&&e.constructor===this)return e;var n=new this(S);return O(n,e),n}A?b=function(){return n.nextTick(m)}:c?(C=0,g=new c(m),y=document.createTextNode(""),g.observe(y,{characterData:!0}),b=function(){y.data=C=++C%2}):d?((h=new MessageChannel).port1.onmessage=m,b=function(){return h.port2.postMessage(0)}):b=void 0===s?function(){try{var e=Function("return this")().require("vertx");return void 0!==(i=e.runOnLoop||e.runOnContext)?function(){i(m)}:p()}catch(e){return p()}}():p();var E=Math.random().toString(36).substring(2);function S(){}var w=void 0,I=1,x=2,k={error:null};function N(e){try{return e.then}catch(e){return k.error=e,k}}function L(n,t,o){t.constructor===n.constructor&&o===v&&t.constructor.resolve===B?function(e,n){n._state===I?T(e,n._result):n._state===x?M(e,n._result):R(n,void 0,(function(n){return O(e,n)}),(function(n){return M(e,n)}))}(n,t):o===k?(M(n,k.error),k.error=null):void 0===o?T(n,t):e(o)?function(e,n,t){l((function(e){var o=!1,r=function(e,n,t,o){try{e.call(n,t,o)}catch(e){return e}}(t,n,(function(t){o||(o=!0,n!==t?O(e,t):T(e,t))}),(function(n){o||(o=!0,M(e,n))}),e._label);!o&&r&&(o=!0,M(e,r))}),e)}(n,t,o):T(n,t)}function O(e,n){var t,o;e===n?M(e,new TypeError("You cannot resolve a promise with itself")):(o=typeof(t=n),null===t||"object"!==o&&"function"!==o?T(e,n):L(e,n,N(n)))}function _(e){e._onerror&&e._onerror(e._result),U(e)}function T(e,n){e._state===w&&(e._result=n,e._state=I,0!==e._subscribers.length&&l(U,e))}function M(e,n){e._state===w&&(e._state=x,e._result=n,l(_,e))}function R(e,n,t,o){var r=e._subscribers,i=r.length;e._onerror=null,r[i]=n,r[i+I]=t,r[i+x]=o,0===i&&e._state&&l(U,e)}function U(e){var n=e._subscribers,t=e._state;if(0!==n.length){for(var o=void 0,r=void 0,i=e._result,a=0;a<n.length;a+=3)o=n[a],r=n[a+t],o?P(t,o,r,i):r(i);e._subscribers.length=0}}function P(n,t,o,r){var i=e(o),a=void 0,l=void 0,s=void 0,u=void 0;if(i){if((a=function(e,n){try{return e(n)}catch(e){return k.error=e,k}}(o,r))===k?(u=!0,l=a.error,a.error=null):s=!0,t===a)return void M(t,new TypeError("A promises callback cannot return that same promise."))}else a=r,s=!0;t._state!==w||(i&&s?O(t,a):u?M(t,l):n===I?T(t,a):n===x&&M(t,a))}var G=0;function H(e){e[E]=G++,e._state=void 0,e._result=void 0,e._subscribers=[]}var D=function(){function e(e,n){this._instanceConstructor=e,this.promise=new e(S),this.promise[E]||H(this.promise),o(n)?(this.length=n.length,this._remaining=n.length,this._result=new Array(this.length),0===this.length?T(this.promise,this._result):(this.length=this.length||0,this._enumerate(n),0===this._remaining&&T(this.promise,this._result))):M(this.promise,new Error("Array Methods must be provided an Array"))}return e.prototype._enumerate=function(e){for(var n=0;this._state===w&&n<e.length;n++)this._eachEntry(e[n],n)},e.prototype._eachEntry=function(e,n){var t=this._instanceConstructor,o=t.resolve;if(o===B){var r=N(e);if(r===v&&e._state!==w)this._settledAt(e._state,n,e._result);else if("function"!=typeof r)this._remaining--,this._result[n]=e;else if(t===j){var i=new t(S);L(i,e,r),this._willSettleAt(i,n)}else this._willSettleAt(new t((function(n){return n(e)})),n)}else this._willSettleAt(o(e),n)},e.prototype._settledAt=function(e,n,t){var o=this.promise;o._state===w&&(this._remaining--,e===x?M(o,t):this._result[n]=t),0===this._remaining&&T(o,this._result)},e.prototype._willSettleAt=function(e,n){var t=this;R(e,void 0,(function(e){return t._settledAt(I,n,e)}),(function(e){return t._settledAt(x,n,e)}))},e}(),j=function(){function n(e){this[E]=G++,this._result=this._state=void 0,this._subscribers=[],S!==e&&("function"!=typeof e&&function(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}(),this instanceof n?function(e,n){try{n((function(n){O(e,n)}),(function(n){M(e,n)}))}catch(n){M(e,n)}}(this,e):function(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}())}return n.prototype.catch=function(e){return this.then(null,e)},n.prototype.finally=function(n){var t=this.constructor;return e(n)?this.then((function(e){return t.resolve(n()).then((function(){return e}))}),(function(e){return t.resolve(n()).then((function(){throw e}))})):this.then(n,n)},n}();return j.prototype.then=v,j.all=function(e){return new D(this,e).promise},j.race=function(e){var n=this;return o(e)?new n((function(t,o){for(var r=e.length,i=0;i<r;i++)n.resolve(e[i]).then(t,o)})):new n((function(e,n){return n(new TypeError("You must pass an array to race."))}))},j.resolve=B,j.reject=function(e){var n=new this(S);return M(n,e),n},j._setScheduler=function(e){a=e},j._setAsap=function(e){l=e},j._asap=l,j.polyfill=function(){var e=void 0;if(void 0!==t)e=t;else if("undefined"!=typeof self)e=self;else try{e=Function("return this")()}catch(e){throw new Error("polyfill failed because global object is unavailable in this environment")}var n=e.Promise;if(n){var o=null;try{o=Object.prototype.toString.call(n.resolve())}catch(e){}if("[object Promise]"===o&&!n.cast)return}e.Promise=j},j.Promise=j,j},e.exports=o()}).call(this,t(3),t(4))},function(e,n){var t,o,r=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function l(e){if(t===setTimeout)return setTimeout(e,0);if((t===i||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:i}catch(e){t=i}try{o="function"==typeof clearTimeout?clearTimeout:a}catch(e){o=a}}();var s,u=[],c=!1,A=-1;function d(){c&&s&&(c=!1,s.length?u=s.concat(u):A=-1,u.length&&p())}function p(){if(!c){var e=l(d);c=!0;for(var n=u.length;n;){for(s=u,u=[];++A<n;)s&&s[A].run();A=-1,n=u.length}s=null,c=!1,function(e){if(o===clearTimeout)return clearTimeout(e);if((o===a||!o)&&clearTimeout)return o=clearTimeout,clearTimeout(e);try{o(e)}catch(n){try{return o.call(null,e)}catch(n){return o.call(this,e)}}}(e)}}function f(e,n){this.fun=e,this.array=n}function m(){}r.nextTick=function(e){var n=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)n[t-1]=arguments[t];u.push(new f(e,n)),1!==u.length||c||l(p)},f.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=m,r.addListener=m,r.once=m,r.off=m,r.removeListener=m,r.removeAllListeners=m,r.emit=m,r.prependListener=m,r.prependOnceListener=m,r.listeners=function(e){return[]},r.binding=function(e){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(e){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},function(e,n){var t;t=function(){return this}();try{t=t||new Function("return this")()}catch(e){"object"==typeof window&&(t=window)}e.exports=t},function(e,n,t){"use strict";var o,r=this&&this.__extends||(o=function(e,n){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(e,n)},function(e,n){function t(){this.constructor=e}o(e,n),e.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)});Object.defineProperty(n,"__esModule",{value:!0});var i=function(e){function n(n,t){var o=e.call(this,n,n.scene,t)||this;return o.view=n,n.addToScene(o),o}return r(n,e),n}(t(6).AbstractSceneLayer);n.CustomLayer=i},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=t(7),r=function(){function e(e,n,t){this.view=e,this.scene=n,this.sceneGroup=this.view.createSceneGroup(),this._visible=!1,this.signalConnections=new o.SignalConnections,this.visible=!t||void 0===t.visible||!!t.visible}return e.prototype.onDestroy=function(){this.signalConnections.disconnectAll()},e.prototype.onBeforeRender=function(e){},e.prototype.onBeforeRenderViewport=function(e){this.sceneGroup.visible=this.isVisibleInViewport(e)},e.prototype.onAfterRender=function(e){},e.prototype.onAfterRenderViewport=function(e){},e.prototype.onTransitionStart=function(e){},e.prototype.onTransitionEnd=function(e){},e.prototype.onCameraMoveEnd=function(e){},e.prototype.onViewportCameraMoveEnd=function(e,n){},e.prototype.onKeyDown=function(e){return!1},e.prototype.onKeyUp=function(e){return!1},e.prototype.onClick=function(e){return!1},e.prototype.onDoubleClick=function(e){return!1},e.prototype.onHold=function(e){return!1},e.prototype.onMouseMove=function(e){},e.prototype.onMouseWheel=function(e,n){return!1},e.prototype.onContextMenu=function(e){},e.prototype.isVisibleInViewport=function(e){return this._visible&&(!this._targetViewport||this._targetViewport===e)},e.prototype.trackSignal=function(e){var n=this;return{connect:function(t,o){var r=e.connect(t,o);return n.signalConnections.add(r),r}}},Object.defineProperty(e.prototype,"targetViewport",{get:function(){return this._targetViewport},set:function(e){this._targetViewport=e,this.view.invalidateScene()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"visible",{get:function(){return this._visible},set:function(e){if(e&&!this._visible)this.scene.add(this.sceneGroup);else{if(e||!this._visible)return;this.scene.remove(this.sceneGroup)}this._visible=e,this.visibilityChanged(),this.view.invalidateScene()},enumerable:!0,configurable:!0}),e.prototype.visibilityChanged=function(){},e}();n.AbstractSceneLayer=r},function(e,n,t){"use strict";var o,r=this&&this.__extends||(o=function(e,n){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(e,n)},function(e,n){function t(){this.constructor=e}o(e,n),e.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)});Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function e(e,n,t){void 0===e&&(e=null),void 0===n&&(n=null),void 0===t&&(t=0),this.enabled=!0,this.newLink=!1,this.callback=null,this.prev=e||this,this.next=n||this,this.order=t}return e.prototype.isEnabled=function(){return this.enabled&&!this.newLink},e.prototype.setEnabled=function(e){this.enabled=e},e.prototype.unlink=function(){this.callback=null,this.next.prev=this.prev,this.prev.next=this.next},e.prototype.insert=function(n,t){for(var o=this.prev;o!==this&&!(o.order<=t);)o=o.prev;var r=new e(o,o.next,t);return r.callback=n,o.next=r,r.next.prev=r,r},e}(),a=function(){function e(e,n){this.link=n}return e.prototype.disconnect=function(){return null!==this.link&&(this.link.unlink(),this.link=null,!0)},Object.defineProperty(e.prototype,"enabled",{get:function(){return null!==this.link&&this.link.isEnabled()},set:function(e){this.link&&this.link.setEnabled(e)},enumerable:!0,configurable:!0}),e}(),l=function(){function e(){this.list=[]}return e.prototype.add=function(e){this.list.push(e)},e.prototype.disconnectAll=function(){for(var e=0,n=this.list;e<n.length;e++)n[e].disconnect();this.list=[]},e}();n.SignalConnections=l;var s=function(){function e(){this.head=new i,this.hasNewLinks=!1,this.emitDepth=0,this.emit=this.emitInternal.bind(this)}return e.prototype.connect=function(e,n){void 0===n&&(n=0);var t=this.head.insert(e,n);return this.emitDepth>0&&(this.hasNewLinks=!0,t.newLink=!0),new a(this.head,t)},e.prototype.disconnect=function(e){for(var n=this.head.next;n!==this.head;n=n.next)if(n.callback===e)return n.unlink(),!0;return!1},e.prototype.disconnectAll=function(){for(;this.head.next!==this.head;)this.head.next.unlink()},e.prototype.emitInternal=function(){this.emitDepth++;for(var e=this.head.next;e!==this.head;e=e.next)e.isEnabled()&&e.callback&&e.callback.apply(null,arguments);this.emitDepth--,this.unsetNewLink()},e.prototype.emitCollecting=function(e,n){this.emitDepth++;for(var t=this.head.next;t!==this.head;t=t.next)if(t.isEnabled()&&t.callback){var o=t.callback.apply(null,n);if(!e.handleResult(o))break}this.emitDepth--,this.unsetNewLink()},e.prototype.unsetNewLink=function(){if(this.hasNewLinks&&0==this.emitDepth){for(var e=this.head.next;e!==this.head;e=e.next)e.newLink=!1;this.hasNewLinks=!1}},e}();n.Signal=s;var u=function(e){var n=this;this.emit=function(){e.emitCollecting(n,arguments)}};n.Collector=u;var c=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return r(n,e),n.prototype.handleResult=function(e){return this.result=e,!0},n.prototype.getResult=function(){return this.result},n.prototype.reset=function(){delete this.result},n}(u);n.CollectorLast=c;var A=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.result=!1,n}return r(n,e),n.prototype.handleResult=function(e){return this.result=e,!!this.result},n.prototype.getResult=function(){return this.result},n.prototype.reset=function(){this.result=!1},n}(u);n.CollectorUntil0=A;var d=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.result=!1,n}return r(n,e),n.prototype.handleResult=function(e){return this.result=e,!this.result},n.prototype.getResult=function(){return this.result},n.prototype.reset=function(){this.result=!1},n}(u);n.CollectorWhile0=d;var p=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.result=[],n}return r(n,e),n.prototype.handleResult=function(e){return this.result.push(e),!0},n.prototype.getResult=function(){return this.result},n.prototype.reset=function(){this.result.length=0},n}(u);n.CollectorArray=p},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){e.BUILDING="BUILDING",e.FLOOR="FLOOR",e.ROOM="ROOM",e.FREE_SPACE_NAVIGATION="FREE_SPACE_NAVIGATION",e.CUSTOM="CUSTOM"}(n.SiteModelType||(n.SiteModelType={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){e.ROUTING="routing",e.ANALYST="analyst",e.JAVASCRIPT_API="api",e.USER_MANAGEMENT="user_management"}(n.LicenseFeatureType||(n.LicenseFeatureType={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){e[e.VIEW=0]="VIEW",e[e.SEARCH=1]="SEARCH",e[e.SITE_MODEL_DETAILS=2]="SITE_MODEL_DETAILS"}(n.PoiClickOrigin||(n.PoiClickOrigin={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){e[e.NoBlending=0]="NoBlending",e[e.NormalBlending=1]="NormalBlending",e[e.AdditiveBlending=2]="AdditiveBlending",e[e.SubtractiveBlending=3]="SubtractiveBlending",e[e.MultiplyBlending=4]="MultiplyBlending"}(n.BlendingMode||(n.BlendingMode={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){e.ENGLISH="en",e.GERMAN="de",e.POLISH="pl",e.CHINESE_TRADITIONAL="zh_tw",e.CHINESE="zh",e.JAPANESE="ja",e.CZECH="cs",e.HUNGARIAN="hu",e.TURKISH="tr"}(n.UiLanguage||(n.UiLanguage={})),function(e){e.COMMA=",",e.POINT="."}(n.DecimalSeparators||(n.DecimalSeparators={})),function(e){e.ABKHAZ="ab",e.AFAR="aa",e.AFRIKAANS="af",e.AKAN="ak",e.ALBANIAN="sq",e.AMHARIC="am",e.ARABIC="ar",e.ARAGONESE="an",e.ARMENIAN="hy",e.ASSAMESE="as",e.AVARIC="av",e.AVESTAN="ae",e.AYMARA="ay",e.AZERBAIJANI="az",e.BAMBARA="bm",e.BASHKIR="ba",e.BASQUE="eu",e.BELARUSIAN="be",e.BENGALI="bn",e.BIHARI="bh",e.BISLAMA="bi",e.BOSNIAN="bs",e.BRETON="br",e.BULGARIAN="bg",e.BURMESE="my",e.CATALAN="ca",e.VALENCIAN="ca",e.CHAMORRO="ch",e.CHECHEN="ce",e.CHICHEWA="ny",e.CHEWA="ny",e.NYANJA="ny",e.CHINESE="zh",e.CHINESE_TRADITIONAL="zh_tw",e.CHUVASH="cv",e.CORNISH="kw",e.CORSICAN="co",e.CREE="cr",e.CROATIAN="hr",e.CZECH="cs",e.DANISH="da",e.DIVEHI="dv",e.DHIVEHI="dv",e.MALDIVIAN="dv",e.DUTCH="nl",e.ENGLISH="en",e.ESPERANTO="eo",e.ESTONIAN="et",e.EWE="ee",e.FAROESE="fo",e.FIJIAN="fj",e.FINNISH="fi",e.FRENCH="fr",e.FULA="ff",e.FULAH="ff",e.PULAAR="ff",e.PULAR="ff",e.GALICIAN="gl",e.GEORGIAN="ka",e.GERMAN="de",e.GREEK_MODERN="el",e["GUARANÍ"]="gn",e.GUJARATI="gu",e.HAITIAN="ht",e.HAITIAN_CREOLE="ht",e.HAUSA="ha",e.HEBREW_MODERN="he",e.HERERO="hz",e.HINDI="hi",e.HIRI_MOTU="ho",e.HUNGARIAN="hu",e.INTERLINGUA="ia",e.INDONESIAN="id",e.INTERLINGUE="ie",e.IRISH="ga",e.IGBO="ig",e.INUPIAQ="ik",e.IDO="io",e.ICELANDIC="is",e.ITALIAN="it",e.INUKTITUT="iu",e.JAPANESE="ja",e.JAVANESE="jv",e.KALAALLISUT="kl",e.GREENLANDIC="kl",e.KANNADA="kn",e.KANURI="kr",e.KASHMIRI="ks",e.KAZAKH="kk",e.KHMER="km",e.KIKUYU="ki",e.GIKUYU="ki",e.KINYARWANDA="rw",e.KIRGHIZ="ky",e.KYRGYZ="ky",e.KOMI="kv",e.KONGO="kg",e.KOREAN="ko",e.KURDISH="ku",e.KWANYAMA="kj",e.KUANYAMA="kj",e.LATIN="la",e.LUXEMBOURGISH="lb",e.LETZEBURGESCH="lb",e.LUGANDA="lg",e.LIMBURGISH="li",e.LIMBURGAN="li",e.LIMBURGER="li",e.LINGALA="ln",e.LAO="lo",e.LITHUANIAN="lt",e.LUBA_KATANGA="lu",e.LATVIAN="lv",e.MANX="gv",e.MACEDONIAN="mk",e.MALAGASY="mg",e.MALAY="ms",e.MALAYALAM="ml",e.MALTESE="mt",e.MAORI="mi",e.MARATHI="mr",e.MARSHALLESE="mh",e.MONGOLIAN="mn",e.NAURU="na",e.NAVAJO="nv",e.NAVAHO="nv",e.NORWEGIAN_BOKMAL="nb",e.NDEBELE_NORTH="nd",e.NEPALI="ne",e.NDONGA="ng",e.NORWEGIAN_NYNORSK="nn",e.NORWEGIAN="no",e.NUOSU="ii",e.NDEBELE_SOUTH="nr",e.OCCITAN="oc",e.OJIBWE="oj",e.OJIBWA="oj",e.SLAVONIC_OLD_CHURCH="cu",e.OROMO="om",e.ORIYA="or",e.OSSETIAN="os",e.OSSETIC="os",e.PANJABI="pa",e.PUNJABI="pa",e.PALI="pi",e.PERSIAN="fa",e.POLISH="pl",e.PASHTO="ps",e.PUSHTO="ps",e.PORTUGUESE="pt",e.QUECHUA="qu",e.ROMANSH="rm",e.KIRUNDI="rn",e.ROMANIAN="ro",e.MOLDAVIAN="ro",e.MOLDOVAN="ro",e.RUSSIAN="ru",e.SANSKRIT="sa",e.SARDINIAN="sc",e.SINDHI="sd",e.SAMI_NORTHERN="se",e.SAMOAN="sm",e.SANGO="sg",e.SERBIAN="sr",e.SCOTTISH_GAELIC="gd",e.GAELIC="gd",e.SHONA="sn",e.SINHALA="si",e.SINHALESE="si",e.SLOVAK="sk",e.SLOVENE="sl",e.SOMALI="so",e.SOTHO_SOUTHERN="st",e.SPANISH="es",e.CASTILIAN="es",e.SUNDANESE="su",e.SWAHILI="sw",e.SWATI="ss",e.SWEDISH="sv",e.TAMIL="ta",e.TELUGU="te",e.TAJIK="tg",e.THAI="th",e.TIGRINYA="ti",e.TIBETAN_STANDARD="bo",e.TIBETAN_CENTRAL="bo",e.TURKMEN="tk",e.TAGALOG="tl",e.TSWANA="tn",e.TONGA="to",e.TURKISH="tr",e.TSONGA="ts",e.TATAR="tt",e.TWI="tw",e.TAHITIAN="ty",e.UIGHUR="ug",e.UYGHUR="ug",e.UKRAINIAN="uk",e.URDU="ur",e.UZBEK="uz",e.VENDA="ve",e.VIETNAMESE="vi",e.VOLAPUEK="vo",e.WALLOON="wa",e.WELSH="cy",e.WOLOF="wo",e.FRISIAN_WESTERN="fy",e.XHOSA="xh",e.YIDDISH="yi",e.YORUBA="yo",e.ZHUANG="za",e.CHUANG="za"}(n.DataLanguage||(n.DataLanguage={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){e.ENTER_BUILDING="walk_inside",e.EXIT_BUILDING="walk_outside",e.ENTER_ELEVATOR_UP="enter_elevator_up",e.ENTER_ELEVATOR_DOWN="enter_elevator_down",e.EXIT_ELEVATOR="exit_elevator",e.ENTER_STAIRS_UP="enter_stairs_up",e.ENTER_STAIRS_DOWN="enter_stairs_down",e.EXIT_STAIRS="exit_stairs",e.CHANGE_FLOOR_UP="change_floor_up",e.CHANGE_FLOOR_DOWN="change_floor_down",e.START="start",e.END="end",e.EDGE="edge",e.SOURCE_PROJECTION="source_projection_to_navgraph",e.DESTINATION_PROJECTION="destination_projection_to_navgraph"}(n.InstructionType||(n.InstructionType={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){e.MAP="map",e.PANORAMA="panorama"}(n.ViewType||(n.ViewType={}))}])},function(e,n){let t=function(){let e,n=null,t=document.querySelector(".modalPi"),o=document.querySelectorAll(".routerItem");localStorage.setItem("newestHistory","");let r=document.querySelector(".routerSailio #btnCancel"),i=document.querySelector(".routerHistory .historyCloseButton"),a=document.querySelector("#btnSucceed"),l=document.querySelector(".closePi"),s=document.querySelector("#historyBtn"),u=document.querySelector("#video"),c=document.querySelector("#btnKaavio"),A=document.querySelector("#teksti"),d=document.querySelector(".routerTeksti .textCloseButton"),p=document.querySelector(".closeTu"),f=document.querySelector("#turva");r.addEventListener("click",()=>{k(0)}),l.addEventListener("click",()=>{t.style.display="none",k(0)}),s.addEventListener("click",()=>{k(3)}),u.addEventListener("click",()=>{N("https://esite.viar360.com/virtual/story/play/F9A6498E-181D-0B14-A285-E74CF38E954A?getiframedimensions=true&ui=false&video_cmd=false")}),c.addEventListener("click",()=>{k(2)}),i.addEventListener("click",()=>{k(0)}),A.addEventListener("click",()=>{k(4)}),d.addEventListener("click",()=>{k(1)}),p.addEventListener("click",()=>{k(1)}),f.addEventListener("click",()=>{k(5)}),document.querySelector("#fillBtn").addEventListener("click",()=>{k(1)});let m=document.querySelector(".pumpCloseButton");const h=e=>{localStorage.setItem("meterLevel",e)},C=()=>parseInt(localStorage.getItem("meterLevel"));h(1e3);const g=e=>{let n=C();(n+=e)<=0?n=0:n>=1e3&&(n=1e3),localStorage.setItem("meterLevel",n)},y=e=>{localStorage.setItem("meterFillLevel",e)},b=()=>parseInt(localStorage.getItem("meterFillLevel")),v=(e,n,t)=>{let o=localStorage.getItem("meterLevel");e.style.height=o<=10?"1%":o/10+"%",o<=50?(e.style.backgroundColor="#f91a00",t.style.backgroundColor="#f91a00"):o<500?(e.style.backgroundColor="#FFC707",t.style.backgroundColor="#FFC707"):(e.style.backgroundColor="#40df00",t.style.backgroundColor="#40df00"),n.innerText=o<=950?o+" L":"",e.style.borderRadius=1e3===o?"3px":"0 0 3px 3px",t.style.height=b()};let B=document.querySelector(".refreshFillLevelBtn"),E=document.querySelector(".pumpMeterFillLevel"),S=document.querySelector(".pumpRatioVesi"),w=document.querySelector(".pumpRatioFosf"),I=document.querySelector(".pumpRatioLipea");B.addEventListener("click",()=>{y(1e3-C()),E.style.backgroundColor=document.querySelector(".pumpMeterLevel").style.backgroundColor,E.style.height=b()/10+"%",w.innerText="Fosfaatti: "+parseFloat(.002*b()).toFixed(2)+" kg",I.innerText="Lipeä: "+parseFloat(4e-4*b()).toFixed(3)+" kg",S.innerText="Vesi: "+b()+" L"}),a.addEventListener("click",()=>{let e,n=new Date,t=localStorage.getItem("newestHistory");C()+b()<1e3?e=C()+b():C()+b()>=1e3&&(e=1e3),t+=`<button class="historycontainer accordion">\n                    <div class="fas fa-chevron-down align-right descdroparrow"></div>\n                    <div class="maintdate">${n.getDate()}.${parseInt(n.getMonth()+1)}.${n.getFullYear()}</div>\n                    <div class="mainttitle">Säiliön täyttö</div>\n                </button>\n                <div class="maintdesc panel">\n                    <h2>Vettä aluksi: ${C()} L</h2>\n                    </br>\n                    <h2>Vettä lisätty: ${b()} L</h2>\n                    <h2>Fosfaattia lisätty: ${parseFloat(.002*b()).toFixed(2)} kg</h2>\n                    <h2>Lipeää lisätty ${parseFloat(4e-4*b()).toFixed(3)} kg</h2>\n                    </br>\n                    <h2>Vettä lopuksi: ${e} L</h2>\n            </div>`,h(e),y(0),localStorage.setItem("newestHistory",t),k(0),v(document.querySelector(".pumpMeterLevel"),document.querySelector(".pumpMeterLevelCurrent"),document.querySelector(".pumpMeterFillLevel"))});const x=function(){let t=IV.api.poi.service;for(routerItem of(t.closePoi(),document.querySelector(".routerContainer").style.display="none",document.querySelector(".routerContainer .backDrop").style.display="none",o))routerItem.style.display="none";n.dom.style.display="none",clearInterval(e)},k=function(n){for(routerItem of o)routerItem!==o[n]?(routerItem.style.display="none",console.log(routerItem)):routerItem.style.display="flex";if(0===n)v(document.querySelector(".pumpMeterLevel"),document.querySelector(".pumpMeterLevelCurrent"),document.querySelector(".pumpMeterFillLevel")),e=setInterval(()=>{g(-1),v(document.querySelector(".pumpMeterLevel"),document.querySelector(".pumpMeterLevelCurrent"),document.querySelector(".pumpMeterFillLevel"))},100);else if(3===n){document.querySelector(".routerHistory .modalContent").innerHTML+=localStorage.getItem("newestHistory"),localStorage.setItem("newestHistory","");let n,t=document.getElementsByClassName("accordion");for(n=0;n<t.length;n++)t[n].addEventListener("click",(function(){this.classList.toggle("active");let e=this.nextElementSibling;e.style.maxHeight?e.style.maxHeight=null:e.style.maxHeight=e.scrollHeight+"px"}));clearInterval(e)}else if(2===n){let e=document.querySelector(".modalPi");console.log(e),e.style.display="block"}else if(5===n){let e=document.querySelector(".modalTu");console.log(e),e.style.display="block"}else clearInterval(e)},N=function(e){window.open(e,"_blank")};return{initOverrides:function(){var t;t=".routerPump",m.addEventListener("click",x),document.querySelector(".backDrop").addEventListener("click",x),n={dom:document.querySelector(t)},IV.api.poi.service.onPoiClick.connect((function(t){!function(t){IV.api.ui.languageService.getCurrentLanguage();console.log(n),document.querySelector(".routerContainer").style.display="flex",document.querySelector(".routerContainer .backDrop").style.display="flex",n.dom.style.display="flex",v(document.querySelector(".pumpMeterLevel"),document.querySelector(".pumpMeterLevelCurrent"),document.querySelector(".pumpMeterFillLevel")),e=setInterval(()=>{g(-1),v(document.querySelector(".pumpMeterLevel"),document.querySelector(".pumpMeterLevelCurrent"),document.querySelector(".pumpMeterFillLevel"))},100)}()}))}}}();n.MyApp=t}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
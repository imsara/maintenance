!function(e){var n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(r,o,function(n){return e[n]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t(1);var r=t(6),o=t(7),i=function(){var e=this;r.getApi("https://demo.esitevr.com/iv.fortum.jarvenpaa/",{"ui.poi_panel.visible":!1}).then((function(n){e.ivApi=n,o.MyApp.initOverrides()}))};window.TestApp=new i},function(e,n,t){var r=t(2);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(4)(r,o);r.locals&&(e.exports=r.locals)},function(e,n,t){(e.exports=t(3)(!0)).push([e.i,'indoorviewer{height:100vh}html,body{height:100%;width:100%;margin:0;padding:0;font-family:\'Nunito\', sans-serif;font-weight:300}.routerContainer{z-index:999;position:fixed;top:0;left:0;width:100%;height:100%;display:none;align-items:center;justify-content:center}.routerContainer .backDrop{z-index:9999;display:none;top:0;left:0;width:100%;height:100%;position:fixed;background-color:rgba(0,0,0,0.4)}.routerContainer .modal{display:flex;flex-direction:column;position:relative;height:100%;width:100%;overflow:hidden;background-color:white;border-radius:3px;box-shadow:0 0 21px -10px rgba(0,0,0,0.75)}.routerContainer .modal .modalHeader{flex:0 1;padding:1rem 0 1rem 0;display:flex;flex-direction:column;align-items:center}.routerContainer .modal .modalHeader .modalTitle{margin:0 0 0 0;padding:0 0 0 0;color:#353535}.routerContainer .modal .modalHeader .modalSubTitle{margin:0 0 0.5rem 0;padding:0;color:#353535}.routerContainer .modal .modalHeader .divider{margin:0;padding:0;height:2px;width:calc(100% - 6rem);border-bottom:1px solid #bbd6db;border-radius:50%;background-color:#b5e6f0}.routerContainer .modal .modalContent{flex:1 0;display:flex;flex-direction:column;align-items:center;padding:0 3rem 0 3rem;width:100%}.routerContainer .modal .modalContent .modalContentItem{display:flex;flex-direction:row;justify-content:space-between;align-content:center;width:100%;margin:0;padding:0}.routerContainer .modal .modalContent .accordion{padding:1rem 0 1rem 0}.routerContainer .modal .modalContent .accordion .accordionTitle{margin:0;padding:0;font-family:\'Nunito\', sans-serif;font-size:2rem;color:#353535}.routerContainer .modal .modalContent .accordion .accordionOpener{margin:0;padding:0;color:#353535;transform:translateY(0.5rem)}.routerContainer .modal .btnC{display:flex;justify-content:center;width:100%;margin:1rem 0 0 0;padding:0.75rem 0 0.75rem 0;border-radius:10px}.routerContainer .modal .btnBlue{background-color:#25b7d3;color:white}.routerContainer .modal .btnRed{background-color:#ee403f;color:white;margin-right:1rem}.routerContainer .modal .btnGreen{background-color:#19d15c;color:white}.routerContainer .modal .btnTitle{margin:0;padding:0;font-family:\'Nunito\', sans-serif;font-size:3rem;font-weight:300;transform:translateY(0.2rem)}.routerContainer .modal .modalFooter{flex:0 1;display:flex;flex-direction:row;margin:0;padding:0 3rem 3rem 3rem}header{text-align:center;border-bottom:0.1em solid rgba(34,186,211,0.5)}.align-left{float:left !important}#eq-name{font-size:2em;line-height:0.8em;display:inline-block}.v{display:inline-block}.btn.btn-success{color:#707070 !important;background-color:#ffffff;background-image:linear-gradient(to bottom, #fff, #fff);border-color:#ffffff #ffffff #ffffff}.btn.btn-success:hover{color:#707070;background-color:#ffffff;background-image:linear-gradient(to bottom, #fff, #fff);border-color:#ffffff #ffffff #ffffff}.kks{font-size:initial;text-align:inherit}.routerItem{display:none;height:640px;width:360px;z-index:99999}.pumpContainer{display:grid;grid-template-columns:35% auto;grid-template-rows:4em 0.5em 25% auto 40%;grid-template-areas:"header header" ". ." "meter recipe" "meter ." "meter btns";grid-column-gap:0.5em;grid-row-gap:0.5em;padding:0.4em;height:100%;width:100%;top:2rem;left:2rem;border-radius:3px;box-shadow:0 0 21px -10px rgba(0,0,0,0.75);background-color:white}.head{grid-area:header;padding:0.3em}.meter{grid-area:meter;padding:0.3em;border:0.1em solid #707070}.recipe{grid-area:recipe;padding:0.3em;border:0.1em solid rgba(34,186,211,0.5)}#suhde{text-align:center}.btns{grid-area:btns;padding:0.3em;grid-template-columns:auto;grid-template-rows:1fr 1fr 1fr;grid-template-areas:"kaavio" "taytto" "historia";display:grid}.kaavio{grid-area:kaavio;text-align:center}.taytto{grid-area:taytto;text-align:center}.historia{grid-area:historia;text-align:center}.btn-primary{background-color:#22BAD3;border-color:#22BAD3;width:10em;height:4em;margin:0.2em}\n',"",{version:3,sources:["/home/tatu/maintenance/src/src/index.scss"],names:[],mappings:"AAAA,aACC,YAAa,CACb,UAaG,YACA,WAEA,SACA,UAKA,iCACA,eAAgB,CACnB,iBAGG,YAEA,eAEA,MACA,OAEA,WACA,YAEA,aACA,mBACA,sBAAuB,CAb3B,2BAgBI,aAEA,aAEA,MACA,OAEA,WACA,YAEA,eAEA,gCAAoC,CA5BxC,wBAgCQ,aACA,sBAEA,kBAEA,YACA,WAEA,gBACA,uBAEA,kBACA,0CAA2C,CA5CnD,qCA+CY,SAEA,sBAEA,aACA,sBACA,kBAAmB,CArD/B,iDAwDgB,eACA,gBAGA,aAAc,CA5D9B,oDA+DgB,oBACA,UAEA,aAAc,CAlE9B,8CAqEgB,SACA,UAEA,WACA,wBAEA,gCACA,kBAEA,wBAAoC,CA9EpD,sCAkFY,SAEA,aACA,sBACA,mBAEA,sBAEA,UAAW,CA1FvB,wDA6FgB,aACA,mBACA,8BACA,qBAEA,WAEA,SACA,SAAU,CArG1B,iDAwGgB,qBAAsB,CAxGtC,iEA2GoB,SACA,UAEA,iCACA,eAEA,aAAc,CAjHlC,kEAoHoB,SACA,UAEA,cAEA,4BAA6B,CAzHjD,8BA+HY,aAEA,uBAEA,WAEA,kBACA,4BAGA,kBAAmB,CAzI/B,iCA4IY,yBACA,WAAY,CA7IxB,gCAgJY,yBACA,YAEA,iBAAkB,CAnJ9B,kCAwJY,yBACA,WAAY,CAzJxB,kCA4JY,SACA,UAEA,iCACA,eACA,gBAEA,4BAA6B,CAnKzC,qCAwKY,SAEA,aACA,mBAEA,SACA,wBAAyB,CAG5B,OASL,kBACA,8CAAgD,CACnD,YAGG,qBAAsB,CACzB,SAGG,cACA,kBACA,oBAAqB,CACxB,GAGG,oBAAqB,CACxB,iBAGG,yBACA,yBACA,wDACA,oCAAqC,CACxC,uBAGG,cACA,yBACA,wDACA,oCAAqC,CACxC,KAGG,kBACA,kBAAkB,CACrB,YAIG,aAGA,aACA,YAEA,aAAc,CACjB,eAKG,aACA,+BACA,0CACA,gFAKA,sBACA,mBACA,cACA,YACA,WACA,SACA,UACA,kBACA,2CACA,sBAAuB,CAC1B,MAGG,iBACA,aAAc,CACjB,OAGG,gBACA,cACA,0BAA2B,CAC9B,QAGG,iBACA,cACA,uCAA2C,CAC9C,OAGG,iBAAiB,CACpB,MAMG,eACA,cACA,2BACA,+BACA,iDAGA,YAAa,CAChB,QAGG,iBACA,iBAAkB,CACrB,QAGG,iBACA,iBAAkB,CACrB,UAGG,mBACA,iBAAkB,CACrB,aAIG,yBACA,qBACA,WACA,WACA,YACJ,CAAC",file:"index.scss",sourcesContent:['indoorviewer {\n\theight: 100vh;\n}\n\n/*#myPOIViewer {\n\tposition: absolute;\n\ttop: 460px;\n\tleft: 500px;\n\twidth: 350px;\n\tz-index: 1000;\n\tdisplay: none;\n\tbackground-color: #ee0;\n}*/\n\nhtml, body {\n    height: 100%;\n    width: 100%;\n\n    margin: 0;\n    padding: 0;\n\n    /* background-color: #25b7d3; */\n\n\n    font-family: \'Nunito\', sans-serif;\n    font-weight: 300;\n}\n\n.routerContainer {\n    z-index: 999;\n\n    position: fixed;\n\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n\n    display: none;\n    align-items: center;\n    justify-content: center;\n\n    .backDrop {\n    z-index: 9999;\n\n    display: none;\n\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n\n    background-color: rgba(0, 0, 0, 0.4);\n    }\n\n    .modal {\n        display: flex;\n        flex-direction: column;\n\n        position: relative;\n\n        height: 100%;\n        width: 100%;\n\n        overflow: hidden;\n        background-color: white;\n\n        border-radius: 3px;\n        box-shadow: 0 0 21px -10px rgba(0,0,0,0.75);\n\n        .modalHeader {\n            flex: 0 1;\n\n            padding: 1rem 0 1rem 0;\n\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n\n            .modalTitle {\n                margin: 0 0 0 0;\n                padding: 0 0 0 0;\n\n\n                color: #353535;\n            }\n            .modalSubTitle {\n                margin: 0 0 0.5rem 0;\n                padding: 0;\n\n                color: #353535;\n            }\n            .divider {\n                margin: 0;\n                padding: 0;\n\n                height: 2px;\n                width: calc(100% - 6rem);\n\n                border-bottom: 1px solid rgb(187, 214, 219);\n                border-radius: 50%;\n\n                background-color: rgb(181, 230, 240);\n            }\n        }\n        .modalContent {\n            flex: 1 0;\n\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n\n            padding: 0 3rem 0 3rem;\n\n            width: 100%;\n\n            .modalContentItem {\n                display: flex;\n                flex-direction: row;\n                justify-content: space-between;\n                align-content: center;\n\n                width: 100%;\n\n                margin: 0;\n                padding: 0;\n            }\n            .accordion {\n                padding: 1rem 0 1rem 0;\n\n                .accordionTitle {\n                    margin: 0;\n                    padding: 0;\n\n                    font-family: \'Nunito\', sans-serif;\n                    font-size: 2rem;\n\n                    color: #353535;\n                }\n                .accordionOpener {\n                    margin: 0;\n                    padding: 0;\n\n                    color: #353535;\n\n                    transform: translateY(0.5rem);\n                }\n            }\n        }\n\n        .btnC {\n            display: flex;\n\n            justify-content: center;\n\n            width: 100%;\n\n            margin: 1rem 0 0 0;\n            padding: 0.75rem 0 0.75rem 0;\n\n\n            border-radius: 10px;\n        }\n        .btnBlue {\n            background-color: #25b7d3;\n            color: white;\n        }\n        .btnRed {\n            background-color: #ee403f;\n            color: white;\n\n            margin-right: 1rem;\n\n\n        }\n        .btnGreen {\n            background-color: #19d15c;\n            color: white;\n        }\n        .btnTitle {\n            margin: 0;\n            padding: 0;\n\n            font-family: \'Nunito\', sans-serif;\n            font-size: 3rem;\n            font-weight: 300;\n\n            transform: translateY(0.2rem);\n\n        }\n\n        .modalFooter {\n            flex: 0 1;\n\n            display: flex;\n            flex-direction: row;\n\n            margin: 0;\n            padding: 0 3rem 3rem 3rem;\n\n\n        }\n    }\n\n}\n\n\n\n\nheader {\n    text-align: center;\n    border-bottom:.1em solid rgba(34, 186, 211, 0.5);\n}\n\n.align-left {\n    float: left !important;\n}\n\n#eq-name {\n    font-size: 2em;\n    line-height: 0.8em;\n    display: inline-block;\n}\n\n.v {\n    display: inline-block;\n}\n\n.btn.btn-success {\n    color: #707070 !important;\n    background-color: #ffffff;\n    background-image: linear-gradient(to bottom, #ffffff, #ffffff);\n    border-color: #ffffff #ffffff #ffffff;\n}\n\n.btn.btn-success:hover {\n    color: #707070;\n    background-color: #ffffff;\n    background-image: linear-gradient(to bottom, #ffffff, #ffffff);\n    border-color: #ffffff #ffffff #ffffff;\n}\n\n.kks{\n    font-size:initial;\n    text-align:inherit;\n}\n\n\n.routerItem {\n    display: none;\n\n\n    height: 640px;\n    width: 360px;\n\n    z-index: 99999;\n}\n\n\n/*MAIN LAYOUT GRID*/\n.pumpContainer {\n    display: grid;\n    grid-template-columns: 35% auto;\n    grid-template-rows: 4em 0.5em 25% auto 40%;\n    grid-template-areas:    "header header"\n    ". ."\n    "meter recipe"\n    "meter ."\n    "meter btns";\n    grid-column-gap: 0.5em;\n    grid-row-gap: 0.5em;\n    padding: 0.4em;\n    height: 100%;\n    width: 100%; /*stretch to the full width and height of the device.*/\n    top: 2rem;\n    left: 2rem;\n    border-radius: 3px;\n    box-shadow: 0 0 21px -10px rgba(0,0,0,0.75);\n    background-color: white;\n}\n\n.head {\n    grid-area: header;\n    padding: 0.3em;\n}\n\n.meter {\n    grid-area: meter;\n    padding: 0.3em;\n    border: 0.1em solid #707070;\n}\n\n.recipe {\n    grid-area: recipe;\n    padding: 0.3em;\n    border: 0.1em solid rgba(34, 186, 211, 0.5);\n}\n\n#suhde{\n    text-align:center;\n}\n\n\n\n/*BUTTON NESTED GRID & BUTTON AREA (MAIN LAYOUT GRID)*/\n.btns {\n    grid-area: btns;\n    padding: 0.3em;\n    grid-template-columns: auto;\n    grid-template-rows: 1fr 1fr 1fr;\n    grid-template-areas:    "kaavio"\n    "taytto"\n    "historia";\n    display: grid;\n}\n\n.kaavio {\n    grid-area: kaavio;\n    text-align: center;\n}\n\n.taytto {\n    grid-area: taytto;\n    text-align: center;\n}\n\n.historia {\n    grid-area: historia;\n    text-align: center;\n}\n\n/*BUTTON*/\n.btn-primary {\n    background-color: #22BAD3;\n    border-color: #22BAD3;\n    width: 10em;\n    height: 4em;\n    margin: 0.2em\n}\n'],sourceRoot:""}])},function(e,n){e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=function(e,n){var t=e[1]||"",r=e[3];if(!r)return t;if(n&&"function"==typeof btoa){var o=(a=r,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),i=r.sources.map((function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"}));return[t].concat(i).concat([o]).join("\n")}var a;return[t].join("\n")}(n,e);return n[2]?"@media "+n[2]+"{"+t+"}":t})).join("")},n.i=function(e,t){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var i=this[o][0];"number"==typeof i&&(r[i]=!0)}for(o=0;o<e.length;o++){var a=e[o];"number"==typeof a[0]&&r[a[0]]||(t&&!a[2]?a[2]=t:t&&(a[2]="("+a[2]+") and ("+t+")"),n.push(a))}},n}},function(e,n,t){var r,o,i={},a=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=r.apply(this,arguments)),o}),s=function(e,n){return n?n.querySelector(e):document.querySelector(e)},u=function(e){var n={};return function(e,t){if("function"==typeof e)return e();if(void 0===n[e]){var r=s.call(this,e,t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}n[e]=r}return n[e]}}(),c=null,l=0,f=[],A=t(5);function d(e,n){for(var t=0;t<e.length;t++){var r=e[t],o=i[r.id];if(o){o.refs++;for(var a=0;a<o.parts.length;a++)o.parts[a](r.parts[a]);for(;a<r.parts.length;a++)o.parts.push(b(r.parts[a],n))}else{var s=[];for(a=0;a<r.parts.length;a++)s.push(b(r.parts[a],n));i[r.id]={id:r.id,refs:1,parts:s}}}}function p(e,n){for(var t=[],r={},o=0;o<e.length;o++){var i=e[o],a=n.base?i[0]+n.base:i[0],s={css:i[1],media:i[2],sourceMap:i[3]};r[a]?r[a].parts.push(s):t.push(r[a]={id:a,parts:[s]})}return t}function h(e,n){var t=u(e.insertInto);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=f[f.length-1];if("top"===e.insertAt)r?r.nextSibling?t.insertBefore(n,r.nextSibling):t.appendChild(n):t.insertBefore(n,t.firstChild),f.push(n);else if("bottom"===e.insertAt)t.appendChild(n);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=u(e.insertAt.before,t);t.insertBefore(n,o)}}function m(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var n=f.indexOf(e);n>=0&&f.splice(n,1)}function g(e){var n=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var r=function(){0;return t.nc}();r&&(e.attrs.nonce=r)}return y(n,e.attrs),h(e,n),n}function y(e,n){Object.keys(n).forEach((function(t){e.setAttribute(t,n[t])}))}function b(e,n){var t,r,o,i;if(n.transform&&e.css){if(!(i="function"==typeof n.transform?n.transform(e.css):n.transform.default(e.css)))return function(){};e.css=i}if(n.singleton){var a=l++;t=c||(c=g(n)),r=E.bind(null,t,a,!1),o=E.bind(null,t,a,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(t=function(e){var n=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",y(n,e.attrs),h(e,n),n}(n),r=N.bind(null,t,n),o=function(){m(t),t.href&&URL.revokeObjectURL(t.href)}):(t=g(n),r=I.bind(null,t),o=function(){m(t)});return r(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;r(e=n)}else o()}}e.exports=function(e,n){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(n=n||{}).attrs="object"==typeof n.attrs?n.attrs:{},n.singleton||"boolean"==typeof n.singleton||(n.singleton=a()),n.insertInto||(n.insertInto="head"),n.insertAt||(n.insertAt="bottom");var t=p(e,n);return d(t,n),function(e){for(var r=[],o=0;o<t.length;o++){var a=t[o];(s=i[a.id]).refs--,r.push(s)}e&&d(p(e,n),n);for(o=0;o<r.length;o++){var s;if(0===(s=r[o]).refs){for(var u=0;u<s.parts.length;u++)s.parts[u]();delete i[s.id]}}}};var C,v=(C=[],function(e,n){return C[e]=n,C.filter(Boolean).join("\n")});function E(e,n,t,r){var o=t?"":r.css;if(e.styleSheet)e.styleSheet.cssText=v(n,o);else{var i=document.createTextNode(o),a=e.childNodes;a[n]&&e.removeChild(a[n]),a.length?e.insertBefore(i,a[n]):e.appendChild(i)}}function I(e,n){var t=n.css,r=n.media;if(r&&e.setAttribute("media",r),e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}function N(e,n,t){var r=t.css,o=t.sourceMap,i=void 0===n.convertToAbsoluteUrls&&o;(n.convertToAbsoluteUrls||i)&&(r=A(r)),o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var a=new Blob([r],{type:"text/css"}),s=e.href;e.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}},function(e,n){e.exports=function(e){var n="undefined"!=typeof window&&window.location;if(!n)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var t=n.protocol+"//"+n.host,r=t+n.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,(function(e,n){var o,i=n.trim().replace(/^"(.*)"$/,(function(e,n){return n})).replace(/^'(.*)'$/,(function(e,n){return n}));return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?e:(o=0===i.indexOf("//")?i:0===i.indexOf("/")?t+i:r+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")}))}},function(e,n,t){window,e.exports=function(e){var n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(r,o,function(n){return e[n]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=1)}([function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){e.ID="ID",e.IMPORTANCE="IMPORTANCE"}(n.PoiSortableField||(n.PoiSortableField={})),function(e){e.ASCENDING="ASC",e.DESCENDING="DESC"}(n.SortOrder||(n.SortOrder={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t(2).polyfill();var r=t(5);n.CustomLayer=r.CustomLayer;var o=t(8);n.SiteModelType=o.SiteModelType;var i=t(0);n.PoiSortableField=i.PoiSortableField;var a=t(0);n.SortOrder=a.SortOrder;var s=t(9);n.LicenseFeatureType=s.LicenseFeatureType;var u=t(10);n.PoiClickOrigin=u.PoiClickOrigin;var c=t(11);n.BlendingMode=c.BlendingMode;var l=t(12);n.UiLanguage=l.UiLanguage,n.DataLanguage=l.DataLanguage,n.DecimalSeparators=l.DecimalSeparators;var f=t(13);n.InstructionType=f.InstructionType;var A=t(14);n.ViewType=A.ViewType,n.getApi=function(e,n){if(void 0===n&&(n={}),n.hasOwnProperty("base_url"))throw Error("'base_url' configuration property is unnecessary when using getApi(). Please remove.");if(n.hasOwnProperty("onLoadComplete"))throw Error("'onLoadComplete' configuration property is unnecessary when using getApi(). Please use Promise.then() instead.");return new Promise((function(t,r){var o=document.createElement("script");o.src=e+("/"===e.slice(-1)?"":"/")+"IndoorViewerAPI.js",o.onerror=function(e){console.error("Fetching "+o.src+" failed.",e),r(e)},o.onload=function(){window.IV.loaded((function(){n=Object.assign(n,{base_url:e,onLoadComplete:function(){window.IV.injector.get("LicenseService").initialized.then((function(){var e=window.IV.injector.get("ApiService");t(e)})).catch((function(e){console.error("Loading the IndoorViewer API failed.",e),r(e)}))}}),new window.IndoorViewer(n)}))},document.head.appendChild(o)}))}},function(e,n,t){(function(n,t){
/*!
 * @overview es6-promise - a tiny implementation of Promises/A+.
 * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
 * @license   Licensed under MIT license
 *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
 * @version   v4.2.6+9869a4bc
 */
var r;r=function(){"use strict";function e(e){return"function"==typeof e}var r=Array.isArray?Array.isArray:function(e){return"[object Array]"===Object.prototype.toString.call(e)},o=0,i=void 0,a=void 0,s=function(e,n){p[o]=e,p[o+1]=n,2===(o+=2)&&(a?a(h):C())},u="undefined"!=typeof window?window:void 0,c=u||{},l=c.MutationObserver||c.WebKitMutationObserver,f="undefined"==typeof self&&void 0!==n&&"[object process]"==={}.toString.call(n),A="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel;function d(){var e=setTimeout;return function(){return e(h,1)}}var p=new Array(1e3);function h(){for(var e=0;e<o;e+=2)(0,p[e])(p[e+1]),p[e]=void 0,p[e+1]=void 0;o=0}var m,g,y,b,C=void 0;function v(e,n){var t=this,r=new this.constructor(N);void 0===r[I]&&H(r);var o=t._state;if(o){var i=arguments[o-1];s((function(){return G(o,r,i,t._result)}))}else U(t,r,e,n);return r}function E(e){if(e&&"object"==typeof e&&e.constructor===this)return e;var n=new this(N);return R(n,e),n}f?C=function(){return n.nextTick(h)}:l?(g=0,y=new l(h),b=document.createTextNode(""),y.observe(b,{characterData:!0}),C=function(){b.data=g=++g%2}):A?((m=new MessageChannel).port1.onmessage=h,C=function(){return m.port2.postMessage(0)}):C=void 0===u?function(){try{var e=Function("return this")().require("vertx");return void 0!==(i=e.runOnLoop||e.runOnContext)?function(){i(h)}:d()}catch(e){return d()}}():d();var I=Math.random().toString(36).substring(2);function N(){}var w=void 0,S=1,_=2,O={error:null};function B(e){try{return e.then}catch(e){return O.error=e,O}}function T(n,t,r){t.constructor===n.constructor&&r===v&&t.constructor.resolve===E?function(e,n){n._state===S?x(e,n._result):n._state===_?k(e,n._result):U(n,void 0,(function(n){return R(e,n)}),(function(n){return k(e,n)}))}(n,t):r===O?(k(n,O.error),O.error=null):void 0===r?x(n,t):e(r)?function(e,n,t){s((function(e){var r=!1,o=function(e,n,t,r){try{e.call(n,t,r)}catch(e){return e}}(t,n,(function(t){r||(r=!0,n!==t?R(e,t):x(e,t))}),(function(n){r||(r=!0,k(e,n))}),e._label);!r&&o&&(r=!0,k(e,o))}),e)}(n,t,r):x(n,t)}function R(e,n){var t,r;e===n?k(e,new TypeError("You cannot resolve a promise with itself")):(r=typeof(t=n),null===t||"object"!==r&&"function"!==r?x(e,n):T(e,n,B(n)))}function L(e){e._onerror&&e._onerror(e._result),M(e)}function x(e,n){e._state===w&&(e._result=n,e._state=S,0!==e._subscribers.length&&s(M,e))}function k(e,n){e._state===w&&(e._state=_,e._result=n,s(L,e))}function U(e,n,t,r){var o=e._subscribers,i=o.length;e._onerror=null,o[i]=n,o[i+S]=t,o[i+_]=r,0===i&&e._state&&s(M,e)}function M(e){var n=e._subscribers,t=e._state;if(0!==n.length){for(var r=void 0,o=void 0,i=e._result,a=0;a<n.length;a+=3)r=n[a],o=n[a+t],r?G(t,r,o,i):o(i);e._subscribers.length=0}}function G(n,t,r,o){var i=e(r),a=void 0,s=void 0,u=void 0,c=void 0;if(i){if((a=function(e,n){try{return e(n)}catch(e){return O.error=e,O}}(r,o))===O?(c=!0,s=a.error,a.error=null):u=!0,t===a)return void k(t,new TypeError("A promises callback cannot return that same promise."))}else a=o,u=!0;t._state!==w||(i&&u?R(t,a):c?k(t,s):n===S?x(t,a):n===_&&k(t,a))}var D=0;function H(e){e[I]=D++,e._state=void 0,e._result=void 0,e._subscribers=[]}var P=function(){function e(e,n){this._instanceConstructor=e,this.promise=new e(N),this.promise[I]||H(this.promise),r(n)?(this.length=n.length,this._remaining=n.length,this._result=new Array(this.length),0===this.length?x(this.promise,this._result):(this.length=this.length||0,this._enumerate(n),0===this._remaining&&x(this.promise,this._result))):k(this.promise,new Error("Array Methods must be provided an Array"))}return e.prototype._enumerate=function(e){for(var n=0;this._state===w&&n<e.length;n++)this._eachEntry(e[n],n)},e.prototype._eachEntry=function(e,n){var t=this._instanceConstructor,r=t.resolve;if(r===E){var o=B(e);if(o===v&&e._state!==w)this._settledAt(e._state,n,e._result);else if("function"!=typeof o)this._remaining--,this._result[n]=e;else if(t===j){var i=new t(N);T(i,e,o),this._willSettleAt(i,n)}else this._willSettleAt(new t((function(n){return n(e)})),n)}else this._willSettleAt(r(e),n)},e.prototype._settledAt=function(e,n,t){var r=this.promise;r._state===w&&(this._remaining--,e===_?k(r,t):this._result[n]=t),0===this._remaining&&x(r,this._result)},e.prototype._willSettleAt=function(e,n){var t=this;U(e,void 0,(function(e){return t._settledAt(S,n,e)}),(function(e){return t._settledAt(_,n,e)}))},e}(),j=function(){function n(e){this[I]=D++,this._result=this._state=void 0,this._subscribers=[],N!==e&&("function"!=typeof e&&function(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}(),this instanceof n?function(e,n){try{n((function(n){R(e,n)}),(function(n){k(e,n)}))}catch(n){k(e,n)}}(this,e):function(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}())}return n.prototype.catch=function(e){return this.then(null,e)},n.prototype.finally=function(n){var t=this.constructor;return e(n)?this.then((function(e){return t.resolve(n()).then((function(){return e}))}),(function(e){return t.resolve(n()).then((function(){throw e}))})):this.then(n,n)},n}();return j.prototype.then=v,j.all=function(e){return new P(this,e).promise},j.race=function(e){var n=this;return r(e)?new n((function(t,r){for(var o=e.length,i=0;i<o;i++)n.resolve(e[i]).then(t,r)})):new n((function(e,n){return n(new TypeError("You must pass an array to race."))}))},j.resolve=E,j.reject=function(e){var n=new this(N);return k(n,e),n},j._setScheduler=function(e){a=e},j._setAsap=function(e){s=e},j._asap=s,j.polyfill=function(){var e=void 0;if(void 0!==t)e=t;else if("undefined"!=typeof self)e=self;else try{e=Function("return this")()}catch(e){throw new Error("polyfill failed because global object is unavailable in this environment")}var n=e.Promise;if(n){var r=null;try{r=Object.prototype.toString.call(n.resolve())}catch(e){}if("[object Promise]"===r&&!n.cast)return}e.Promise=j},j.Promise=j,j},e.exports=r()}).call(this,t(3),t(4))},function(e,n){var t,r,o=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function s(e){if(t===setTimeout)return setTimeout(e,0);if((t===i||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:i}catch(e){t=i}try{r="function"==typeof clearTimeout?clearTimeout:a}catch(e){r=a}}();var u,c=[],l=!1,f=-1;function A(){l&&u&&(l=!1,u.length?c=u.concat(c):f=-1,c.length&&d())}function d(){if(!l){var e=s(A);l=!0;for(var n=c.length;n;){for(u=c,c=[];++f<n;)u&&u[f].run();f=-1,n=c.length}u=null,l=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(n){try{return r.call(null,e)}catch(n){return r.call(this,e)}}}(e)}}function p(e,n){this.fun=e,this.array=n}function h(){}o.nextTick=function(e){var n=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)n[t-1]=arguments[t];c.push(new p(e,n)),1!==c.length||l||s(d)},p.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=h,o.addListener=h,o.once=h,o.off=h,o.removeListener=h,o.removeAllListeners=h,o.emit=h,o.prependListener=h,o.prependOnceListener=h,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,n){var t;t=function(){return this}();try{t=t||new Function("return this")()}catch(e){"object"==typeof window&&(t=window)}e.exports=t},function(e,n,t){"use strict";var r,o=this&&this.__extends||(r=function(e,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(e,n)},function(e,n){function t(){this.constructor=e}r(e,n),e.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)});Object.defineProperty(n,"__esModule",{value:!0});var i=function(e){function n(n,t){var r=e.call(this,n,n.scene,t)||this;return r.view=n,n.addToScene(r),r}return o(n,e),n}(t(6).AbstractSceneLayer);n.CustomLayer=i},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(7),o=function(){function e(e,n,t){this.view=e,this.scene=n,this.sceneGroup=this.view.createSceneGroup(),this._visible=!1,this.signalConnections=new r.SignalConnections,this.visible=!t||void 0===t.visible||!!t.visible}return e.prototype.onDestroy=function(){this.signalConnections.disconnectAll()},e.prototype.onBeforeRender=function(e){},e.prototype.onBeforeRenderViewport=function(e){this.sceneGroup.visible=this.isVisibleInViewport(e)},e.prototype.onAfterRender=function(e){},e.prototype.onAfterRenderViewport=function(e){},e.prototype.onTransitionStart=function(e){},e.prototype.onTransitionEnd=function(e){},e.prototype.onCameraMoveEnd=function(e){},e.prototype.onViewportCameraMoveEnd=function(e,n){},e.prototype.onKeyDown=function(e){return!1},e.prototype.onKeyUp=function(e){return!1},e.prototype.onClick=function(e){return!1},e.prototype.onDoubleClick=function(e){return!1},e.prototype.onHold=function(e){return!1},e.prototype.onMouseMove=function(e){},e.prototype.onMouseWheel=function(e,n){return!1},e.prototype.onContextMenu=function(e){},e.prototype.isVisibleInViewport=function(e){return this._visible&&(!this._targetViewport||this._targetViewport===e)},e.prototype.trackSignal=function(e){var n=this;return{connect:function(t,r){var o=e.connect(t,r);return n.signalConnections.add(o),o}}},Object.defineProperty(e.prototype,"targetViewport",{get:function(){return this._targetViewport},set:function(e){this._targetViewport=e,this.view.invalidateScene()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"visible",{get:function(){return this._visible},set:function(e){if(e&&!this._visible)this.scene.add(this.sceneGroup);else{if(e||!this._visible)return;this.scene.remove(this.sceneGroup)}this._visible=e,this.visibilityChanged(),this.view.invalidateScene()},enumerable:!0,configurable:!0}),e.prototype.visibilityChanged=function(){},e}();n.AbstractSceneLayer=o},function(e,n,t){"use strict";var r,o=this&&this.__extends||(r=function(e,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(e,n)},function(e,n){function t(){this.constructor=e}r(e,n),e.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)});Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function e(e,n,t){void 0===e&&(e=null),void 0===n&&(n=null),void 0===t&&(t=0),this.enabled=!0,this.newLink=!1,this.callback=null,this.prev=e||this,this.next=n||this,this.order=t}return e.prototype.isEnabled=function(){return this.enabled&&!this.newLink},e.prototype.setEnabled=function(e){this.enabled=e},e.prototype.unlink=function(){this.callback=null,this.next.prev=this.prev,this.prev.next=this.next},e.prototype.insert=function(n,t){for(var r=this.prev;r!==this&&!(r.order<=t);)r=r.prev;var o=new e(r,r.next,t);return o.callback=n,r.next=o,o.next.prev=o,o},e}(),a=function(){function e(e,n){this.link=n}return e.prototype.disconnect=function(){return null!==this.link&&(this.link.unlink(),this.link=null,!0)},Object.defineProperty(e.prototype,"enabled",{get:function(){return null!==this.link&&this.link.isEnabled()},set:function(e){this.link&&this.link.setEnabled(e)},enumerable:!0,configurable:!0}),e}(),s=function(){function e(){this.list=[]}return e.prototype.add=function(e){this.list.push(e)},e.prototype.disconnectAll=function(){for(var e=0,n=this.list;e<n.length;e++)n[e].disconnect();this.list=[]},e}();n.SignalConnections=s;var u=function(){function e(){this.head=new i,this.hasNewLinks=!1,this.emitDepth=0,this.emit=this.emitInternal.bind(this)}return e.prototype.connect=function(e,n){void 0===n&&(n=0);var t=this.head.insert(e,n);return this.emitDepth>0&&(this.hasNewLinks=!0,t.newLink=!0),new a(this.head,t)},e.prototype.disconnect=function(e){for(var n=this.head.next;n!==this.head;n=n.next)if(n.callback===e)return n.unlink(),!0;return!1},e.prototype.disconnectAll=function(){for(;this.head.next!==this.head;)this.head.next.unlink()},e.prototype.emitInternal=function(){this.emitDepth++;for(var e=this.head.next;e!==this.head;e=e.next)e.isEnabled()&&e.callback&&e.callback.apply(null,arguments);this.emitDepth--,this.unsetNewLink()},e.prototype.emitCollecting=function(e,n){this.emitDepth++;for(var t=this.head.next;t!==this.head;t=t.next)if(t.isEnabled()&&t.callback){var r=t.callback.apply(null,n);if(!e.handleResult(r))break}this.emitDepth--,this.unsetNewLink()},e.prototype.unsetNewLink=function(){if(this.hasNewLinks&&0==this.emitDepth){for(var e=this.head.next;e!==this.head;e=e.next)e.newLink=!1;this.hasNewLinks=!1}},e}();n.Signal=u;var c=function(e){var n=this;this.emit=function(){e.emitCollecting(n,arguments)}};n.Collector=c;var l=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return o(n,e),n.prototype.handleResult=function(e){return this.result=e,!0},n.prototype.getResult=function(){return this.result},n.prototype.reset=function(){delete this.result},n}(c);n.CollectorLast=l;var f=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.result=!1,n}return o(n,e),n.prototype.handleResult=function(e){return this.result=e,!!this.result},n.prototype.getResult=function(){return this.result},n.prototype.reset=function(){this.result=!1},n}(c);n.CollectorUntil0=f;var A=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.result=!1,n}return o(n,e),n.prototype.handleResult=function(e){return this.result=e,!this.result},n.prototype.getResult=function(){return this.result},n.prototype.reset=function(){this.result=!1},n}(c);n.CollectorWhile0=A;var d=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.result=[],n}return o(n,e),n.prototype.handleResult=function(e){return this.result.push(e),!0},n.prototype.getResult=function(){return this.result},n.prototype.reset=function(){this.result.length=0},n}(c);n.CollectorArray=d},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){e.BUILDING="BUILDING",e.FLOOR="FLOOR",e.ROOM="ROOM",e.FREE_SPACE_NAVIGATION="FREE_SPACE_NAVIGATION",e.CUSTOM="CUSTOM"}(n.SiteModelType||(n.SiteModelType={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){e.ROUTING="routing",e.ANALYST="analyst",e.JAVASCRIPT_API="api",e.USER_MANAGEMENT="user_management"}(n.LicenseFeatureType||(n.LicenseFeatureType={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){e[e.VIEW=0]="VIEW",e[e.SEARCH=1]="SEARCH",e[e.SITE_MODEL_DETAILS=2]="SITE_MODEL_DETAILS"}(n.PoiClickOrigin||(n.PoiClickOrigin={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){e[e.NoBlending=0]="NoBlending",e[e.NormalBlending=1]="NormalBlending",e[e.AdditiveBlending=2]="AdditiveBlending",e[e.SubtractiveBlending=3]="SubtractiveBlending",e[e.MultiplyBlending=4]="MultiplyBlending"}(n.BlendingMode||(n.BlendingMode={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){e.ENGLISH="en",e.GERMAN="de",e.POLISH="pl",e.CHINESE_TRADITIONAL="zh_tw",e.CHINESE="zh",e.JAPANESE="ja",e.CZECH="cs",e.HUNGARIAN="hu",e.TURKISH="tr"}(n.UiLanguage||(n.UiLanguage={})),function(e){e.COMMA=",",e.POINT="."}(n.DecimalSeparators||(n.DecimalSeparators={})),function(e){e.ABKHAZ="ab",e.AFAR="aa",e.AFRIKAANS="af",e.AKAN="ak",e.ALBANIAN="sq",e.AMHARIC="am",e.ARABIC="ar",e.ARAGONESE="an",e.ARMENIAN="hy",e.ASSAMESE="as",e.AVARIC="av",e.AVESTAN="ae",e.AYMARA="ay",e.AZERBAIJANI="az",e.BAMBARA="bm",e.BASHKIR="ba",e.BASQUE="eu",e.BELARUSIAN="be",e.BENGALI="bn",e.BIHARI="bh",e.BISLAMA="bi",e.BOSNIAN="bs",e.BRETON="br",e.BULGARIAN="bg",e.BURMESE="my",e.CATALAN="ca",e.VALENCIAN="ca",e.CHAMORRO="ch",e.CHECHEN="ce",e.CHICHEWA="ny",e.CHEWA="ny",e.NYANJA="ny",e.CHINESE="zh",e.CHINESE_TRADITIONAL="zh_tw",e.CHUVASH="cv",e.CORNISH="kw",e.CORSICAN="co",e.CREE="cr",e.CROATIAN="hr",e.CZECH="cs",e.DANISH="da",e.DIVEHI="dv",e.DHIVEHI="dv",e.MALDIVIAN="dv",e.DUTCH="nl",e.ENGLISH="en",e.ESPERANTO="eo",e.ESTONIAN="et",e.EWE="ee",e.FAROESE="fo",e.FIJIAN="fj",e.FINNISH="fi",e.FRENCH="fr",e.FULA="ff",e.FULAH="ff",e.PULAAR="ff",e.PULAR="ff",e.GALICIAN="gl",e.GEORGIAN="ka",e.GERMAN="de",e.GREEK_MODERN="el",e["GUARANÍ"]="gn",e.GUJARATI="gu",e.HAITIAN="ht",e.HAITIAN_CREOLE="ht",e.HAUSA="ha",e.HEBREW_MODERN="he",e.HERERO="hz",e.HINDI="hi",e.HIRI_MOTU="ho",e.HUNGARIAN="hu",e.INTERLINGUA="ia",e.INDONESIAN="id",e.INTERLINGUE="ie",e.IRISH="ga",e.IGBO="ig",e.INUPIAQ="ik",e.IDO="io",e.ICELANDIC="is",e.ITALIAN="it",e.INUKTITUT="iu",e.JAPANESE="ja",e.JAVANESE="jv",e.KALAALLISUT="kl",e.GREENLANDIC="kl",e.KANNADA="kn",e.KANURI="kr",e.KASHMIRI="ks",e.KAZAKH="kk",e.KHMER="km",e.KIKUYU="ki",e.GIKUYU="ki",e.KINYARWANDA="rw",e.KIRGHIZ="ky",e.KYRGYZ="ky",e.KOMI="kv",e.KONGO="kg",e.KOREAN="ko",e.KURDISH="ku",e.KWANYAMA="kj",e.KUANYAMA="kj",e.LATIN="la",e.LUXEMBOURGISH="lb",e.LETZEBURGESCH="lb",e.LUGANDA="lg",e.LIMBURGISH="li",e.LIMBURGAN="li",e.LIMBURGER="li",e.LINGALA="ln",e.LAO="lo",e.LITHUANIAN="lt",e.LUBA_KATANGA="lu",e.LATVIAN="lv",e.MANX="gv",e.MACEDONIAN="mk",e.MALAGASY="mg",e.MALAY="ms",e.MALAYALAM="ml",e.MALTESE="mt",e.MAORI="mi",e.MARATHI="mr",e.MARSHALLESE="mh",e.MONGOLIAN="mn",e.NAURU="na",e.NAVAJO="nv",e.NAVAHO="nv",e.NORWEGIAN_BOKMAL="nb",e.NDEBELE_NORTH="nd",e.NEPALI="ne",e.NDONGA="ng",e.NORWEGIAN_NYNORSK="nn",e.NORWEGIAN="no",e.NUOSU="ii",e.NDEBELE_SOUTH="nr",e.OCCITAN="oc",e.OJIBWE="oj",e.OJIBWA="oj",e.SLAVONIC_OLD_CHURCH="cu",e.OROMO="om",e.ORIYA="or",e.OSSETIAN="os",e.OSSETIC="os",e.PANJABI="pa",e.PUNJABI="pa",e.PALI="pi",e.PERSIAN="fa",e.POLISH="pl",e.PASHTO="ps",e.PUSHTO="ps",e.PORTUGUESE="pt",e.QUECHUA="qu",e.ROMANSH="rm",e.KIRUNDI="rn",e.ROMANIAN="ro",e.MOLDAVIAN="ro",e.MOLDOVAN="ro",e.RUSSIAN="ru",e.SANSKRIT="sa",e.SARDINIAN="sc",e.SINDHI="sd",e.SAMI_NORTHERN="se",e.SAMOAN="sm",e.SANGO="sg",e.SERBIAN="sr",e.SCOTTISH_GAELIC="gd",e.GAELIC="gd",e.SHONA="sn",e.SINHALA="si",e.SINHALESE="si",e.SLOVAK="sk",e.SLOVENE="sl",e.SOMALI="so",e.SOTHO_SOUTHERN="st",e.SPANISH="es",e.CASTILIAN="es",e.SUNDANESE="su",e.SWAHILI="sw",e.SWATI="ss",e.SWEDISH="sv",e.TAMIL="ta",e.TELUGU="te",e.TAJIK="tg",e.THAI="th",e.TIGRINYA="ti",e.TIBETAN_STANDARD="bo",e.TIBETAN_CENTRAL="bo",e.TURKMEN="tk",e.TAGALOG="tl",e.TSWANA="tn",e.TONGA="to",e.TURKISH="tr",e.TSONGA="ts",e.TATAR="tt",e.TWI="tw",e.TAHITIAN="ty",e.UIGHUR="ug",e.UYGHUR="ug",e.UKRAINIAN="uk",e.URDU="ur",e.UZBEK="uz",e.VENDA="ve",e.VIETNAMESE="vi",e.VOLAPUEK="vo",e.WALLOON="wa",e.WELSH="cy",e.WOLOF="wo",e.FRISIAN_WESTERN="fy",e.XHOSA="xh",e.YIDDISH="yi",e.YORUBA="yo",e.ZHUANG="za",e.CHUANG="za"}(n.DataLanguage||(n.DataLanguage={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){e.ENTER_BUILDING="walk_inside",e.EXIT_BUILDING="walk_outside",e.ENTER_ELEVATOR_UP="enter_elevator_up",e.ENTER_ELEVATOR_DOWN="enter_elevator_down",e.EXIT_ELEVATOR="exit_elevator",e.ENTER_STAIRS_UP="enter_stairs_up",e.ENTER_STAIRS_DOWN="enter_stairs_down",e.EXIT_STAIRS="exit_stairs",e.CHANGE_FLOOR_UP="change_floor_up",e.CHANGE_FLOOR_DOWN="change_floor_down",e.START="start",e.END="end",e.EDGE="edge",e.SOURCE_PROJECTION="source_projection_to_navgraph",e.DESTINATION_PROJECTION="destination_projection_to_navgraph"}(n.InstructionType||(n.InstructionType={}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){e.MAP="map",e.PANORAMA="panorama"}(n.ViewType||(n.ViewType={}))}])},function(e,n){let t=function(){let e=null,n=document.querySelectorAll(".routerContainer .routerItem");console.log(n);let t=document.querySelector(".routerSailio #btnCancel");document.querySelector("routerSailio .modalTitle"),document.querySelector("routerSailio .modalSubTitle");document.querySelector("#btnSucceed").addEventListener("click",()=>{i(0)}),t.addEventListener("click",()=>{i(0)}),document.querySelector(".taytto button").addEventListener("click",()=>{i(1)});let r=document.querySelector(".v");const o=function(){let t=IV.api.poi.service;for(routerItem of(t.closePoi(),document.querySelector(".routerContainer").style.display="none",document.querySelector(".routerContainer .backDrop").style.display="none",n))routerItem.style.display="none";e.dom.style.display="none"},i=function(e){for(routerItem of n)routerItem!==n[e]?(routerItem.style.display="none",console.log(routerItem)):routerItem.style.display="flex"};return{initOverrides:function(){var n;n=".routerPump",r.addEventListener("click",o),e={dom:document.querySelector(n)},IV.api.poi.service.onPoiClick.connect((function(n){!function(n){IV.api.ui.languageService.getCurrentLanguage();console.log(e),document.querySelector(".routerContainer").style.display="flex",document.querySelector(".routerContainer .backDrop").style.display="flex",e.dom.style.display="flex"}()}))}}}();n.MyApp=t}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,